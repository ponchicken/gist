{"version":3,"sources":["actions/gist.js","constants/gist.js","containers/Gists.js","components/GistData.js","containers/Gist.js","constant.js","actions/login.js","containers/Login.js","api/index.js","api/get.js","actions/gists.js","containers/Sync.js","actions/user.js","constants/user.js","constants/gists.js","App.js","registerServiceWorker.js","reducers/gist.js","helpers/createReducers.js","reducers/gists.js","reducers/user.js","reducers/login.js","reducers/index.js","configureStore.js","index.js"],"names":["fetchGistFile","gist","dispatch","type","payload","name","file","filename","id","fetch","raw_url","then","res","text","data","gist_fileSuccess","catch","error","gist_fileFailure","Gists_Gists","displayGists","gists","_this","props","length","map","react_default","a","createElement","onClick","setGist","key","description","className","this","react","containers_Gists","Object","es","_ref","e","preventDefault","gist_setActiveGist","loadGistFiles","GistData","updateGist","changeFileData","getFileData","keys","files","filelang","language","toLowerCase","lang","prism_default","languages","hasOwnProperty","lib_default","value","onValueChange","highlight","code","padding","style","fontFamily","fontSize","getFile","Gist_Gist","Gist","Gist_classCallCheck","Gist_possibleConstructorReturn","Gist_getPrototypeOf","call","displayGist","active","find","item","onUpdateGist","changeCode","setState","handleKeyboard","ctrlKey","metaKey","String","fromCharCode","which","state","window","addEventListener","removeEventListener","containers_Gist","loadFile","gist_updateGist","login_getGhCode","redirect_uri","location","origin","pathname","query","query_string_default","stringify","client_id","scope","link","href","Login_Login","loading","login","pending","_this$props","onFetchToken","isAuth","user","html_url","src","avatar_url","alt","onLogout","containers_Login","urlParams","parse","search","url","json","_data$token","token","access_token","login_tokenError","localStorage","setItem","login_fetchToken","removeItem","Err","status","message","statusText","prototype","create","Error","constructor","method","getData","path","concat","makeUrl","headers","Authorization","getItem","ok","getUser","getGists","gists_loadGistsFiles","forEach","Sync_Sync","onFetchData","containers_Sync","user_userFailure","user_fetchUser","gists_gistsSuccess","console","log","gists_gistsFailure","gists_fetchGists","src_App","isAuthenticated","BrowserRouter","basename","Route","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createReducer","initialState","handlers","arguments","undefined","action","defaultState","gists_gists","gists_defineProperty","_createReducer","gists_objectSpread","_objectSpread","_action$payload","newState","gistIndex","findIndex","_action$payload2","index","user_defaultState","login_defaultState","login_defineProperty","login_createReducer","login_objectSpread","reducers","redux","user_objectSpread","persistConfig","storage","localforage_default","persistedReducer","redux_persist_es","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","redux_thunk_es","persistor","react_dom_default","render","integration_react","document","getElementById","URL","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ce3631a.chunk.js","sourcesContent":["import {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  UPDATE_GIST\r\n} from '../constant'\r\n\r\nexport const setActiveGist = id => ({\r\n  type: SET_ACTIVE_GIST,\r\n  payload: id\r\n})\r\n \r\nexport const fileRequest = data => ({\r\n  type: FETCH_GIST_FILE_REQUEST,\r\n  payload: data\r\n})\r\n\r\nexport const fileSuccess = data => ({\r\n  type: FETCH_GIST_FILE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const fileFailure = error => ({\r\n  type: FETCH_GIST_FILE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const updateGist = gist => ({\r\n  type: UPDATE_GIST,\r\n  payload: gist\r\n})\r\n\r\nexport const loadGistFiles = gist => dispatch => {\r\n  Object.keys(gist.files).forEach(name => {\r\n    dispatch(fetchGistFile({\r\n      id: gist.id,\r\n      file: gist.files[name]\r\n    }))\r\n  })\r\n}\r\n\r\nexport const fetchGistFile = gist => dispatch => {\r\n  dispatch(fileRequest({\r\n    name: gist.file.filename,\r\n    id: gist.id\r\n  }))\r\n  fetch(gist.file.raw_url)\r\n    .then(res => res.text())\r\n    .then(data => {\r\n      dispatch(fileSuccess({\r\n        id: gist.id,\r\n        name: gist.file.filename,\r\n        data\r\n      }))\r\n    })\r\n    .catch(error => dispatch(fileFailure(error)))\r\n} ","export const SET_ACTIVE_GIST = 'SET_ACTIVE_GIST'\r\nexport const FETCH_GIST_FILE = 'FETCH_GIST_FILE'\r\nexport const FETCH_GIST_FILE_REQUEST = 'FETCH_GIST_FILE_REQUEST'\r\nexport const FETCH_GIST_FILE_SUCCESS = 'FETCH_GIST_FILE_SUCCESS'\r\nexport const FETCH_GIST_FILE_FAILURE = 'FETCH_GIST_FILE_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setActiveGist } from '../actions/gist'\r\n\r\nclass Gists extends Component {\r\n\r\n  displayGists = () => {\r\n    let gists = this.props.gists.data\r\n    if (gists.length) {\r\n      return gists.map(gist => {\r\n        return <button onClick={this.props.setGist(gist.id)} key={gist.id}>{ gist.description }</button>\r\n      })\r\n    } else {\r\n      return <div>no gists</div>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gists-list\">\r\n        {this.displayGists()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setGist: id => e => {\r\n    e.preventDefault()\r\n    dispatch(setActiveGist(id))\r\n  },\r\n  loadGistFiles: gist => {\r\n    // let files = gist.files\r\n    // files.map(file => {\r\n    //   file\r\n    // })\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gists)","import React from 'react'\r\nimport Editor from 'react-simple-code-editor'\r\nimport Prism from 'prismjs'\r\n\r\nexport default ({ gist, updateGist, changeFileData, getFileData }) => {\r\n  function getFile (filename) {\r\n    let file = gist.files[filename]\r\n    let filelang = (file.language) ? file.language.toLowerCase() : 'clike'\r\n    let lang = (Prism.languages.hasOwnProperty(filelang)) ? filelang : 'clike'\r\n       \r\n\r\n    return (\r\n      <div key={filename} className=\"gist\">\r\n        <h3>{filename}</h3>\r\n        <Editor\r\n          className=\"gist-editor\"\r\n          value={getFileData(filename)}\r\n          onValueChange={changeFileData(filename)} \r\n          highlight={code => {\r\n            return Prism.highlight(code, Prism.languages[lang])\r\n          }}\r\n          padding={10}\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 14,\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function getFiles () {\r\n    const result = Object.keys(gist.files).map(filename => {\r\n      return getFile(filename)\r\n    })\r\n    return result\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{gist.description}</h3>\r\n      <div>\r\n        {getFiles()}\r\n      </div>\r\n      <button onClick={updateGist(gist)}>Submit</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport GistData from '../components/GistData'\r\n\r\nimport {\r\n  fetchGistFile,\r\n  updateGist\r\n} from '../actions/gist'\r\n\r\n\r\nclass Gist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      code: ''\r\n    }\r\n  }\r\n\r\n  displayGist = () => {\r\n    let {\r\n      gists\r\n    } = this.props\r\n    if (!gists.active)\r\n      return 'no active gist'\r\n    else {\r\n      this.gist = gists.data.find(item => item.id === gists.active)\r\n      return <GistData \r\n        gist={this.gist} \r\n        updateGist={this.props.onUpdateGist}\r\n        changeFileData={this.changeFileData}\r\n        changeCode={this.changeCode}\r\n        getFileData={this.getFileData}\r\n      />\r\n    }\r\n  }\r\n\r\n  getFileData = filename => {\r\n    return this.gist.files[filename].data\r\n  }\r\n\r\n  changeFileData = filename => code => {\r\n    this.setState({ code })\r\n    this.gist.files[filename].data = code\r\n  }\r\n\r\n  handleKeyboard = (e) => {\r\n    if (e.ctrlKey || e.metaKey) {\r\n      switch (String.fromCharCode(e.which).toLowerCase()) {\r\n        case 's':\r\n          if (this.gist) this.props.onUpdateGist(this.gist)(e)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyboard)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyboard);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.displayGist() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  loadFile: (data) => e => {\r\n    dispatch(fetchGistFile(data))\r\n  },\r\n  onUpdateGist: (gist) => e => {\r\n    if (e) e.preventDefault()\r\n    dispatch(updateGist(gist))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gist)","export const FETCH_GH_TOKEN_REQUEST = 'FETCH_GH_TOKEN_REQUEST'\r\nexport const FETCH_GH_TOKEN_SUCCESS = 'FETCH_GH_TOKEN_SUCCESS'\r\nexport const FETCH_GH_TOKEN_ERROR = 'FETCH_GH_TOKEN_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const UPDATE_GIST = 'UPDATE_GIST'","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\nimport queryString from 'query-string'\r\n\r\nconst tokenRequest = () => ({\r\n  type: FETCH_GH_TOKEN_REQUEST\r\n})\r\n\r\nconst tokenSuccess = (token) => ({\r\n  type: FETCH_GH_TOKEN_SUCCESS,\r\n  payload: token\r\n})\r\n\r\nconst tokenError = (error) => ({\r\n  type: FETCH_GH_TOKEN_ERROR,\r\n  payload: error,\r\n  error: true\r\n})\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('ghtoken')\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport const getGhCode = () => {\r\n  let redirect_uri = window.location.origin + window.location.pathname\r\n  let query = queryString.stringify({\r\n    client_id: '169a193bbe75c0e129d0',\r\n    scope: 'gist',\r\n    redirect_uri\r\n  })\r\n  let link = `https://github.com/login/oauth/authorize?${query}`\r\n  window.location.href = link\r\n}\r\n\r\nexport const fetchToken = dispatch => {\r\n  const urlParams = queryString.parse(window.location.search)\r\n  if (!urlParams.code) return\r\n  const query = queryString.stringify({\r\n    code: urlParams.code\r\n  })\r\n  const url = `https://server-aenjidvwww.now.sh/callback?${query}`\r\n  dispatch(tokenRequest())\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      let { access_token, error } = data.token\r\n      if (error) {\r\n        dispatch(tokenError(error))\r\n        return\r\n      }\r\n      localStorage.setItem('ghtoken', access_token)\r\n      dispatch(tokenSuccess(access_token))\r\n    })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  getGhCode,\r\n  fetchToken,\r\n  logout\r\n} from '../actions/login'\r\n\r\nclass Login extends Component {\r\n\r\n  loading = () => {\r\n    if (this.props.login.pending) \r\n    return 'loading...'\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {\r\n      login,\r\n      onFetchToken\r\n    } = this.props\r\n    if (!login.isAuth)\r\n      onFetchToken()\r\n  }\r\n\r\n  render() {\r\n    let user = this.props.user.data\r\n    return (\r\n      <div className=\"header-user\">\r\n        <a href={user.html_url} className=\"header-user-name\">\r\n          <img src={user.avatar_url} alt=\"\" className=\"header-user-img\" />\r\n          { user.login }\r\n        </a>\r\n        \r\n        { this.loading() }\r\n        <button onClick={getGhCode}>Login</button>\r\n        <button onClick={this.props.onLogout}>Logout</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ login, user }) => ({\r\n  login, user\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchToken: () => {\r\n    fetchToken(dispatch)\r\n  },\r\n  onLogout: () => {\r\n    dispatch(logout())\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Login)","const apiUrl = 'https://api.github.com'\r\n\r\nconst makeUrl = path => {\r\n  return `${apiUrl}${path}`\r\n}\r\n\r\nexport const prepareJsonFetch = method => path => url => {\r\n  url = url || makeUrl(path)\r\n  return fetch(url, {\r\n    method,\r\n    headers: {\r\n      Authorization: `token ${localStorage.getItem('ghtoken')}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok)\r\n        return res.json()\r\n      else \r\n        throw new Err(res)\r\n    })\r\n}\r\n\r\n\r\nfunction Err(error) {\r\n  this.name = \"Error\"\r\n  this.status = error.status\r\n  this.message = error.statusText\r\n  this.url = error.url\r\n}\r\nErr.prototype = Object.create(Error.prototype)\r\nErr.prototype.constructor = Err","import { prepareJsonFetch } from './index'\r\n\r\nconst getData = prepareJsonFetch('GET')\r\n\r\nexport const getUser = getData(`/user`)\r\nexport const getGists = getData(`/gists`)","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\nimport {\r\n  getGists\r\n} from '../api/get'\r\n\r\nimport {\r\n  loadGistFiles\r\n} from './gist'\r\n\r\nexport const gistsRequest = () => ({\r\n  type: FETCH_GISTS_REQUEST\r\n})\r\n\r\nexport const gistsSuccess = gists => ({\r\n  type: FETCH_GISTS_SUCCESS,\r\n  payload: gists\r\n})\r\n\r\nexport const gistsFailure = error => ({\r\n  type: FETCH_GISTS_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchGists = dispatch => {\r\n  dispatch(gistsRequest())\r\n  getGists()\r\n    .then(gists => {\r\n      dispatch(gistsSuccess(gists))\r\n      dispatch(loadGistsFiles(gists))\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      return dispatch(gistsFailure(error))\r\n    })\r\n}\r\n\r\nexport const loadGistsFiles = gists => dispatch => {\r\n  gists.forEach(gist => {\r\n    dispatch(loadGistFiles(gist))\r\n  })\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { fetchGists } from '../actions/gists';\r\n\r\n\r\nclass Sync extends Component {\r\n\r\n  componentDidMount() {\r\n    // this.props.onFetchData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.onFetchData}>sync</button>       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  }\r\n})\r\n\r\nexport default connect(null, mapDispatch)(Sync)","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nimport {\r\n  getUser\r\n} from '../api/get'\r\n\r\nexport const userRequest = () => ({\r\n  type: FETCH_USER_REQUEST\r\n})\r\n\r\nexport const userSuccess = user => ({\r\n  type: FETCH_USER_SUCCESS,\r\n  payload: user\r\n})\r\n\r\nexport const userFailure = error => ({\r\n  type: FETCH_USER_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchUser = dispatch => {\r\n  dispatch(userRequest())\r\n  getUser()\r\n    .then(data => dispatch(userSuccess(data)))\r\n    .catch(error => dispatch(userFailure(error)))\r\n}","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\r\n\r\n","export const FETCH_GISTS_REQUEST = 'FETCH_GISTS_REQUEST'\r\nexport const FETCH_GISTS_SUCCESS = 'FETCH_GISTS_SUCCESS'\r\nexport const FETCH_GISTS_FAILURE = 'FETCH_GISTS_FAILURE'","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n// import Todo from './containers/Todo'\r\nimport Gists from './containers/Gists';\r\nimport Gist from './containers/Gist';\r\nimport Login from './containers/Login';\r\nimport Sync from './containers/Sync';\r\n\r\nclass App extends Component {\r\n\r\n  isAuthenticated = false\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      {/* <Router> */}\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <Sync />\r\n            <Login />\r\n          </header>\r\n          <aside>\r\n            <Gists />\r\n          </aside>\r\n          <main>\r\n            <Route exact path=\"/\" component={Gist} />\r\n          </main>\r\n          <footer>\r\n            footer\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const setActiveGist = (state, action) => ({\r\n  ...state,\r\n  active: action.payload\r\n})\r\nexport const fetchGistFileRequest = (state, action) => {\r\n  let {\r\n    name, id\r\n  } = action.payload\r\n  let newState = {...state}\r\n\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = true\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileSuccess = (state, action) => {\r\n  let {\r\n    id, name, data\r\n  } = action.payload\r\n  let newState = {...state}\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = false\r\n  file.data = data\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileFailure = (state, action) => {\r\n  return state\r\n}\r\n\r\nexport const updateGist = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\nimport {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  UPDATE_GIST\r\n} from '../constant'\r\n\r\nimport {\r\n  setActiveGist,\r\n  fetchGistFileRequest,\r\n  fetchGistFileSuccess,\r\n  fetchGistFileFailure,\r\n  updateGist\r\n} from './gist'\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nconst fetchGistsRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGistsSuccess = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  data: action.payload,\r\n  error: defaultState.error\r\n})\r\n\r\nconst fetchGistsFailure = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nexport const gists = createReducer(defaultState, {\r\n  [FETCH_GISTS_REQUEST]: fetchGistsRequest,\r\n  [FETCH_GISTS_SUCCESS]: fetchGistsSuccess,\r\n  [FETCH_GISTS_FAILURE]: fetchGistsFailure,\r\n  [SET_ACTIVE_GIST]: setActiveGist,\r\n  [FETCH_GIST_FILE_REQUEST]: fetchGistFileRequest,\r\n  [FETCH_GIST_FILE_SUCCESS]: fetchGistFileSuccess,\r\n  [FETCH_GIST_FILE_FAILURE]: fetchGistFileFailure,\r\n  [UPDATE_GIST]: updateGist\r\n})\r\n\r\n","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nexport const user = (state=defaultState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.payload,\r\n        error: defaultState.error\r\n      }\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: defaultState.data,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  token: '',\r\n  error: {},\r\n  isAuth: false\r\n}\r\n\r\nconst fetchGhTokenRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGhTokenSuccess = (state, action) => ({\r\n  pending: false,\r\n  token: action.payload,\r\n  error: defaultState.error,\r\n  isAuth: true\r\n})\r\n\r\nconst fetchGhTokenError = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst logout = (state) => ({\r\n  ...state,\r\n  token: defaultState.token,\r\n  isAuth: false\r\n})\r\n\r\nexport const login = createReducer(defaultState, {\r\n  [FETCH_GH_TOKEN_REQUEST]: fetchGhTokenRequest,\r\n  [FETCH_GH_TOKEN_SUCCESS]: fetchGhTokenSuccess,\r\n  [FETCH_GH_TOKEN_ERROR]: fetchGhTokenError,\r\n  [LOGOUT]: logout\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { gists } from './gists'\r\nimport { user } from './user'\r\nimport { login } from './login'\r\n\r\nconst rootReducer = combineReducers({\r\n  gists,\r\n  user,\r\n  login\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'localforage'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(persistedReducer, composeEnhancers(\r\n  applyMiddleware(\r\n    thunk\r\n  )\r\n))\r\nexport const persistor = persistStore(store)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n// import promiseMiddleware from 'redux-promise'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport App from './App';\r\nimport './assets/styles/style.scss'\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { store, persistor } from './configureStore'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}