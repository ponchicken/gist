{"version":3,"sources":["actions/gist.js","constants/gist.js","helpers/parseTitle.js","containers/Gists.js","components/GistFile.js","components/GistData.js","containers/Gist.js","constant.js","actions/login.js","api/index.js","api/get.js","actions/user.js","constants/user.js","api/patch.js","actions/gists.js","constants/gists.js","containers/User.js","containers/Sync.js","App.js","registerServiceWorker.js","reducers/gist.js","helpers/createReducers.js","reducers/gists.js","reducers/user.js","reducers/login.js","reducers/index.js","configureStore.js","index.js"],"names":["fetchGistFile","gist","dispatch","type","payload","name","file","filename","id","fetch","raw_url","then","res","text","data","gist_fileSuccess","catch","error","gist_fileFailure","parseTitle","str","titleEndIndex","search","title","slice","length","description","tags","match","trim","Gists_Gists","displayGists","gists","_this","props","map","react_default","a","createElement","onClick","setGist","key","className","chooseGistClass","classes","this","active","changed","react","containers_Gists","Object","es","_ref","e","preventDefault","gist_setActiveGist","loadGistFiles","GistFile_GistFile","GistFile","GistFile_classCallCheck","GistFile_possibleConstructorReturn","GistFile_getPrototypeOf","call","onFilenameChange","files","oldName","state","newName","target","value","setState","getFilename","onFileContentChange","content","_this$props","getInitialState","filelang","language","toLowerCase","lang","prism_default","languages","hasOwnProperty","onChange","lib_default","onValueChange","highlight","code","padding","style","fontFamily","fontSize","GistData_GistData","GistData","GistData_classCallCheck","GistData_possibleConstructorReturn","GistData_getPrototypeOf","onFileAdd","fileAdd","newEl","document","querySelector","focus","keys","i","getFiles","updateGist","Gist_Gist","Gist","Gist_classCallCheck","Gist_possibleConstructorReturn","Gist_getPrototypeOf","displayGist","find","item","onUpdateGist","handleKeyboard","ctrlKey","metaKey","String","fromCharCode","which","window","addEventListener","removeEventListener","containers_Gist","loadFile","gist_changeGist","gist_fileAdd","login_getGhCode","redirect_uri","location","origin","pathname","query","query_string_default","stringify","client_id","scope","link","href","makeUrl","path","concat","headers","Authorization","localStorage","getItem","response","ok","json","Err","status","message","statusText","url","prototype","create","Error","constructor","method","getData","getUser","getGists","user_fetchUser","user_userFailure","patchData","body","JSON","prepareJsonPost","gists_fetchGists","gists_gistsSuccess","gists_loadGistsFiles","console","log","gists_gistsFailure","forEach","gists_updateGists","changedGists","filter","patchGist","gist_updateGistSuccess","ex","finally","User_User","loading","login","pending","onFetchToken","isAuth","user","html_url","src","avatar_url","alt","onLogout","containers_User","urlParams","parse","_data$token","token","access_token","login_tokenError","setItem","login_fetchToken","removeItem","onFetchData","Sync_Sync","onUpdateGists","patching","containers_Sync","src_App","isAuthenticated","BrowserRouter","basename","Route","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createReducer","initialState","handlers","arguments","undefined","action","defaultState","gists_gists","gists_defineProperty","_createReducer","gists_objectSpread","_objectSpread","_action$payload","newState","gistIndex","findIndex","_action$payload2","index","user_defaultState","login_defaultState","login_defineProperty","login_createReducer","login_objectSpread","reducers","redux","user_objectSpread","persistConfig","storage","localforage_default","persistedReducer","redux_persist_es","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","redux_thunk_es","persistor","react_dom_default","render","integration_react","getElementById","URL","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.30e46add.chunk.js","sourcesContent":["import {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  FILE_ADD\r\n} from '../constant'\r\n\r\n\r\nexport const setActiveGist = id => ({\r\n  type: SET_ACTIVE_GIST,\r\n  payload: id\r\n})\r\n \r\nexport const fileRequest = data => ({\r\n  type: FETCH_GIST_FILE_REQUEST,\r\n  payload: data\r\n})\r\n\r\nexport const fileSuccess = data => ({\r\n  type: FETCH_GIST_FILE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const fileFailure = error => ({\r\n  type: FETCH_GIST_FILE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const changeGist = gist => ({\r\n  type: CHANGE_GIST,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistSuccess = gist => ({\r\n  type: UPDATE_GIST_SUCCESS,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistError = error => ({\r\n  type: UPDATE_GIST_ERROR,\r\n  payload: error\r\n})\r\n\r\nexport const fileAdd = (gist) => ({\r\n  type: FILE_ADD,\r\n  payload: gist\r\n})\r\n\r\nexport const loadGistFiles = gist => dispatch => {\r\n  Object.keys(gist.files).forEach(name => {\r\n    dispatch(fetchGistFile({\r\n      id: gist.id,\r\n      file: gist.files[name]\r\n    }))\r\n  })\r\n}\r\n\r\nexport const fetchGistFile = gist => dispatch => {\r\n  dispatch(fileRequest({\r\n    name: gist.file.filename,\r\n    id: gist.id\r\n  }))\r\n  fetch(gist.file.raw_url)\r\n    .then(res => res.text())\r\n    .then(data => {\r\n      dispatch(fileSuccess({\r\n        id: gist.id,\r\n        name: gist.file.filename,\r\n        data\r\n      }))\r\n    })\r\n    .catch(error => dispatch(fileFailure(error)))\r\n}","export const SET_ACTIVE_GIST = 'SET_ACTIVE_GIST'\r\nexport const FETCH_GIST_FILE = 'FETCH_GIST_FILE'\r\nexport const FETCH_GIST_FILE_REQUEST = 'FETCH_GIST_FILE_REQUEST'\r\nexport const FETCH_GIST_FILE_SUCCESS = 'FETCH_GIST_FILE_SUCCESS'\r\nexport const FETCH_GIST_FILE_FAILURE = 'FETCH_GIST_FILE_FAILURE'","export const parseTitle = (str) => {\r\n  let titleEndIndex = str.search(']')\r\n  let title = (titleEndIndex !== -1) ? str.slice(1, titleEndIndex) : str.slice(0, str.length)\r\n  let description = (titleEndIndex !== -1) ? str.slice(titleEndIndex + 1, str.length) : str.slice(0, str.length)\r\n  let tags = str.match(/#[\\w\\-_]*/g)\r\n\r\n  return {\r\n    title: title.trim(),\r\n    description: description.trim(),\r\n    tags\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setActiveGist } from '../actions/gist'\r\nimport { parseTitle } from '../helpers/parseTitle'\r\n\r\nclass Gists extends Component {\r\n\r\n  chooseGistClass (gist) {\r\n    let classes = ''\r\n    classes += (gist.id === this.props.gists.active) ? 'active ' : ''\r\n    classes += (gist.changed) ? 'changed ' : ''\r\n    return classes\r\n  }\r\n\r\n  displayGists = () => {\r\n    let gists = this.props.gists.data\r\n    if (gists.length) {\r\n      return gists.map(gist => {\r\n        let name = parseTitle(gist.description)\r\n        return (\r\n          <button \r\n            onClick={this.props.setGist(gist.id)} \r\n            key={gist.id}\r\n            className={this.chooseGistClass(gist)}\r\n          >\r\n            { name.title }\r\n          </button>\r\n        )\r\n      })\r\n    } else {\r\n      return <div>no gists</div>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gists-list\">\r\n        {this.displayGists()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setGist: id => e => {\r\n    e.preventDefault()\r\n    dispatch(setActiveGist(id))\r\n  },\r\n  loadGistFiles: gist => {\r\n    // let files = gist.files\r\n    // files.map(file => {\r\n    //   file\r\n    // })\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gists)","import React, { Component } from 'react'\r\nimport Editor from 'react-simple-code-editor'\r\nimport Prism from 'prismjs'\r\n\r\nexport default class GistFile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = this.getInitialState()\r\n  }\r\n  \r\n  getInitialState() {\r\n    return { \r\n      filename: this.props.filename,\r\n      content: this.props.files[this.props.filename].content\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (!this.props.files[this.state.filename]) {\r\n      this.setState(this.getInitialState())\r\n    }\r\n  }\r\n\r\n\r\n  onFilenameChange = (e) => {\r\n    let {\r\n      files\r\n    } = this.props\r\n    let oldName = this.state.filename\r\n    let newName = e.target.value\r\n    this.setState({ filename: newName })\r\n    files[this.state.filename].filename = newName\r\n    files[newName] = files[oldName]\r\n    delete files[oldName]\r\n  }\r\n\r\n  getFilename = () => {\r\n    return this.state.filename\r\n  }\r\n\r\n  onFileContentChange = (content) => {\r\n    let {\r\n      filename,\r\n      files\r\n    } = this.props\r\n    this.setState({ content })\r\n    files[filename].content = content\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      files\r\n    } = this.props\r\n    let file = files[this.state.filename]\r\n\r\n    if (file) {\r\n      let filelang = (file.language) ? file.language.toLowerCase() : 'clike'\r\n      let lang = (Prism.languages.hasOwnProperty(filelang)) ? filelang : 'clike'\r\n      let content = this.state.content || ''\r\n\r\n      return (\r\n        <div className=\"gist-file\">\r\n          <input type=\"text\" className=\"gist-file-name\" value={this.getFilename()} onChange={this.onFilenameChange}/>\r\n          <Editor\r\n            className=\"gist-editor\"\r\n            value={content}\r\n            onValueChange={this.onFileContentChange} \r\n            highlight={code => {\r\n              return Prism.highlight(code, Prism.languages[lang])\r\n            }}\r\n            padding={10}\r\n            style={{\r\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n              fontSize: 14,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n\r\n    } else {\r\n      return <div>loading...</div>\r\n    }\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport GistFile from './GistFile'\r\n\r\nexport default class GistData extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // ({ gist, updateGist, changeFileData, getFileData, fileAdd })\r\n    this.state = {\r\n      gist: this.props.gist\r\n    }\r\n  }\r\n\r\n  getFiles () {\r\n    let gist = this.props.gist\r\n    const result = Object.keys(gist.files).map((filename, i) => {\r\n      return <GistFile \r\n        key={i}  \r\n        files={gist.files}\r\n        filename={filename}\r\n      />\r\n    })\r\n    return result\r\n  }\r\n\r\n  onFileAdd = gist => e => {\r\n    this.props.fileAdd(gist)\r\n    let newEl = document.querySelector('.gist-file-name[value=\"new\"]')\r\n    if (newEl) newEl.focus()\r\n  }\r\n\r\n  render() {\r\n    let gist = this.props.gist\r\n    return (\r\n      <div className=\"gist\">\r\n        <h3>{gist.description}</h3>\r\n        <div>\r\n          {this.getFiles()}\r\n        </div>\r\n        <div className=\"gist-actions\">\r\n          <button className=\"btn\" onClick={this.onFileAdd(gist)}>Add file</button>\r\n          <button className=\"btn gist-submit\" onClick={this.props.updateGist(gist)}>Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport GistData from '../components/GistData'\r\n\r\nimport {\r\n  fetchGistFile,\r\n  changeGist,\r\n  fileAdd\r\n} from '../actions/gist'\r\n\r\n\r\nclass Gist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      code: ''\r\n    }\r\n  }\r\n\r\n  displayGist = () => {\r\n    let {\r\n      gists\r\n    } = this.props\r\n    if (!gists.active)\r\n      return 'no active gist'\r\n    else {\r\n      this.gist = gists.data.find(item => item.id === gists.active)\r\n      return <GistData \r\n        gist={this.gist} \r\n        updateGist={this.props.onUpdateGist}\r\n        fileAdd={this.props.onFileAdd}\r\n      />\r\n    }\r\n  }\r\n\r\n  handleKeyboard = (e) => {\r\n    if (e.ctrlKey || e.metaKey) {\r\n      switch (String.fromCharCode(e.which).toLowerCase()) {\r\n        case 's':\r\n          if (this.gist) this.props.onUpdateGist(this.gist)(e)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyboard)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyboard);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.displayGist() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  loadFile: (data) => e => {\r\n    dispatch(fetchGistFile(data))\r\n  },\r\n  onUpdateGist: (gist) => e => {\r\n    if (e) e.preventDefault()\r\n    dispatch(changeGist(gist))\r\n  },\r\n  onFileAdd: (gist) => {\r\n    dispatch(fileAdd(gist))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gist)","export const FETCH_GH_TOKEN_REQUEST = 'FETCH_GH_TOKEN_REQUEST'\r\nexport const FETCH_GH_TOKEN_SUCCESS = 'FETCH_GH_TOKEN_SUCCESS'\r\nexport const FETCH_GH_TOKEN_ERROR = 'FETCH_GH_TOKEN_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const CHANGE_GIST = 'CHANGE_GIST'\r\n\r\nexport const UPDATE_GIST = 'UPDATE_GIST'\r\nexport const UPDATE_GIST_SUCCESS = 'UPDATE_GIST_SUCCESS'\r\nexport const UPDATE_GIST_ERROR = 'UPDATE_GIST_ERROR'\r\n\r\nexport const UPDATE_GISTS_START = 'UPDATE_GISTS_START'\r\nexport const UPDATE_GISTS_FINISH = 'UPDATE_GISTS_FINISH'\r\n\r\nexport const FILE_ADD = 'FILE_ADD'","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\nimport queryString from 'query-string'\r\n\r\nconst tokenRequest = () => ({\r\n  type: FETCH_GH_TOKEN_REQUEST\r\n})\r\n\r\nconst tokenSuccess = (token) => ({\r\n  type: FETCH_GH_TOKEN_SUCCESS,\r\n  payload: token\r\n})\r\n\r\nconst tokenError = (error) => ({\r\n  type: FETCH_GH_TOKEN_ERROR,\r\n  payload: error,\r\n  error: true\r\n})\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('ghtoken')\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport const getGhCode = () => {\r\n  let redirect_uri = window.location.origin + window.location.pathname\r\n  let query = queryString.stringify({\r\n    client_id: '169a193bbe75c0e129d0',\r\n    scope: 'gist',\r\n    redirect_uri\r\n  })\r\n  let link = `https://github.com/login/oauth/authorize?${query}`\r\n  window.location.href = link\r\n}\r\n\r\nexport const fetchToken = dispatch => {\r\n  const urlParams = queryString.parse(window.location.search)\r\n  if (!urlParams.code) return\r\n  const query = queryString.stringify({\r\n    code: urlParams.code\r\n  })\r\n  const url = `https://server-aenjidvwww.now.sh/callback?${query}`\r\n  dispatch(tokenRequest())\r\n\r\n  return fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      let { access_token, error } = data.token\r\n      if (error) {\r\n        dispatch(tokenError(error))\r\n        return\r\n      }\r\n      localStorage.setItem('ghtoken', access_token)\r\n      dispatch(tokenSuccess(access_token))\r\n    })\r\n}\r\n","const apiUrl = 'https://api.github.com'\r\n\r\nconst makeUrl = path => {\r\n  return `${apiUrl}${path}`\r\n}\r\n\r\nconst headers = () => ({\r\n    Authorization: `token ${localStorage.getItem('ghtoken')}`\r\n})\r\n\r\nexport const prepareJsonFetch = method => path => url => {\r\n  url = url || makeUrl(path)\r\n  return fetch(url, {\r\n      method,\r\n      headers: headers(),\r\n    })\r\n    .then(response)\r\n}\r\n\r\nexport const prepareJsonPost = method => path => body => {\r\n  return fetch(makeUrl(path), {\r\n      method,\r\n      headers: headers(),\r\n      body: JSON.stringify( body ) \r\n    })\r\n    .then(response)\r\n}\r\n\r\nconst response = res => {\r\n  if (res.ok)\r\n    return res.json()\r\n  else \r\n    throw new Err(res)\r\n}\r\n\r\nfunction Err(error) {\r\n  this.name = \"Error\"\r\n  this.status = error.status\r\n  this.message = error.statusText\r\n  this.url = error.url\r\n}\r\nErr.prototype = Object.create(Error.prototype)\r\nErr.prototype.constructor = Err","import { prepareJsonFetch } from './index'\r\n\r\nconst getData = prepareJsonFetch('GET')\r\n\r\nexport const getUser = getData(`/user`)\r\nexport const getGists = getData(`/gists`)","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nimport {\r\n  getUser\r\n} from '../api/get'\r\n\r\nexport const userRequest = () => ({\r\n  type: FETCH_USER_REQUEST\r\n})\r\n\r\nexport const userSuccess = user => ({\r\n  type: FETCH_USER_SUCCESS,\r\n  payload: user\r\n})\r\n\r\nexport const userFailure = error => ({\r\n  type: FETCH_USER_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchUser = dispatch => {\r\n  dispatch(userRequest())\r\n  getUser()\r\n    .then(data => dispatch(userSuccess(data)))\r\n    .catch(error => dispatch(userFailure(error)))\r\n}","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\r\n\r\n","import { prepareJsonPost } from './index'\r\n\r\nconst patchData = prepareJsonPost('PATCH')\r\n\r\nexport const patchGist = (gist) => patchData(`/gists/${gist.id}`)(gist)","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\n\r\nimport {\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH\r\n} from '../constant'\r\n\r\nimport {\r\n  getGists\r\n} from '../api/get'\r\nimport { patchGist } from '../api/patch'\r\n\r\nimport {\r\n  loadGistFiles,\r\n  updateGistSuccess,\r\n  updateGistError\r\n} from './gist'\r\n\r\nexport const gistsRequest = () => ({\r\n  type: FETCH_GISTS_REQUEST\r\n})\r\n\r\nexport const updateGistsStart = () => ({\r\n  type: UPDATE_GISTS_START\r\n})\r\n\r\nexport const updateGistsFinish = () => ({\r\n  type: UPDATE_GISTS_FINISH\r\n})\r\n\r\nexport const gistsSuccess = gists => ({\r\n  type: FETCH_GISTS_SUCCESS,\r\n  payload: gists\r\n})\r\n\r\nexport const gistsFailure = error => ({\r\n  type: FETCH_GISTS_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchGists = dispatch => {\r\n  dispatch(gistsRequest())\r\n  getGists()\r\n    .then(gists => {\r\n      dispatch(gistsSuccess(gists))\r\n      dispatch(loadGistsFiles(gists))\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      return dispatch(gistsFailure(error))\r\n    })\r\n}\r\n\r\nexport const loadGistsFiles = gists => dispatch => {\r\n  gists.forEach(gist => {\r\n    dispatch(loadGistFiles(gist))\r\n  })\r\n}\r\n\r\nexport const updateGists = gists => dispatch => {\r\n  const changedGists = gists.data.filter(gist => gist.changed)\r\n  changedGists.forEach(gist => {\r\n    dispatch(updateGistsStart())\r\n    patchGist(gist)\r\n      .then(gist => {\r\n        dispatch(updateGistSuccess(gist))\r\n      })\r\n      .catch(ex => {\r\n        dispatch(updateGistError(ex))\r\n      })\r\n      .finally(res => {\r\n        dispatch(updateGistsFinish())\r\n      })\r\n  })\r\n  return changedGists\r\n}","export const FETCH_GISTS_REQUEST = 'FETCH_GISTS_REQUEST'\r\nexport const FETCH_GISTS_SUCCESS = 'FETCH_GISTS_SUCCESS'\r\nexport const FETCH_GISTS_FAILURE = 'FETCH_GISTS_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  getGhCode,\r\n  fetchToken,\r\n  logout\r\n} from '../actions/login'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { \r\n  fetchGists \r\n} from '../actions/gists';\r\n\r\nclass User extends Component {\r\n\r\n  loading = () => {\r\n    if (this.props.login.pending) \r\n    return 'loading...'\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {\r\n      login,\r\n      onFetchToken\r\n    } = this.props\r\n    if (!login.isAuth)\r\n      onFetchToken()\r\n  }\r\n\r\n  render() {\r\n    let user = this.props.user.data\r\n    return (\r\n      <div className=\"header-user\">\r\n        <a href={user.html_url} className=\"header-user-name\">\r\n          <img src={user.avatar_url} alt=\"\" className=\"header-user-img\" />\r\n          { user.login }\r\n        </a>\r\n        \r\n        { this.loading() }\r\n        <button className=\"btn\" onClick={getGhCode}>Login</button>\r\n        <button className=\"btn\" onClick={this.props.onLogout}>Logout</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ login, user }) => ({\r\n  login, user\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchToken: () => {\r\n    fetchToken(dispatch)\r\n      // .then(res => {\r\n      //   fetchUser(dispatch)\r\n      //   fetchGists(dispatch)\r\n      // })\r\n  },\r\n  onLogout: () => {\r\n    dispatch(logout())\r\n  },\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  },\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(User)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { fetchGists, updateGists } from '../actions/gists';\r\n\r\n\r\nclass Sync extends Component {\r\n\r\n  componentDidMount() {\r\n    // this.props.onFetchData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sync\">\r\n        <button className=\"btn\" onClick={this.props.onFetchData}>pull</button>     \r\n        <button className=\"btn\" onClick={this.props.onUpdateGists(this.props.gists)}>push</button>\r\n        <div className=\"status\">{ this.props.gists.patching ? 'pushing github' : ''}</div>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  },\r\n  onUpdateGists: (gists) => () => {\r\n    dispatch(updateGists(gists))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Sync)","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n// import Todo from './containers/Todo'\r\nimport Gists from './containers/Gists';\r\nimport Gist from './containers/Gist';\r\nimport User from './containers/User';\r\nimport Sync from './containers/Sync';\r\n\r\nclass App extends Component {\r\n\r\n  isAuthenticated = false\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      {/* <Router> */}\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <Sync />\r\n            <User />\r\n          </header>\r\n          <aside>\r\n            <Gists />\r\n          </aside>\r\n          <main>\r\n            <Route exact path=\"/\" component={Gist} />\r\n          </main>\r\n          <footer>\r\n            footer\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n// const getNewGistState = (state, action) => cb => {\r\n//   let newState = {...state}\r\n//   let gist = action.payload\r\n//   let index = state.data.findIndex(item => item.id === gist.id)\r\n//   newState.data[index] = cb(gist)\r\n//   return newState\r\n// }\r\n\r\nexport const setActiveGist = (state, action) => ({\r\n  ...state,\r\n  active: action.payload\r\n})\r\nexport const fetchGistFileRequest = (state, action) => {\r\n  let {\r\n    name, id\r\n  } = action.payload\r\n  let newState = {...state}\r\n\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = true\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileSuccess = (state, action) => {\r\n  let {\r\n    id, name, data\r\n  } = action.payload\r\n  let newState = {...state}\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = false\r\n  file.content = data\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileFailure = (state, action) => {\r\n  return state\r\n}\r\n\r\nexport const changeGist = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = true\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistSuccess = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistError = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const fileAdd = (state, action) => {\r\n  console.log('reducer', action.payload)\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.files['new'] = {\r\n    filename: 'new',\r\n    content: ''\r\n  }\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\nimport {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH,\r\n  FILE_ADD\r\n} from '../constant'\r\n\r\nimport {\r\n  setActiveGist,\r\n  fetchGistFileRequest,\r\n  fetchGistFileSuccess,\r\n  fetchGistFileFailure,\r\n  changeGist,\r\n  updateGistSuccess,\r\n  updateGistError,\r\n  fileAdd\r\n} from './gist'\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nconst fetchGistsRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGistsSuccess = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  data: action.payload,\r\n  error: defaultState.error\r\n})\r\n\r\nconst fetchGistsFailure = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst updateGistsStart = (state) =>({\r\n  ...state,\r\n  patching: true\r\n})\r\n\r\nconst updateGistsFinish = (state) => ({\r\n  ...state,\r\n  patching: false\r\n})\r\n\r\nexport const gists = createReducer(defaultState, {\r\n  [FETCH_GISTS_REQUEST]: fetchGistsRequest,\r\n  [FETCH_GISTS_SUCCESS]: fetchGistsSuccess,\r\n  [FETCH_GISTS_FAILURE]: fetchGistsFailure,\r\n  [SET_ACTIVE_GIST]: setActiveGist,\r\n  [FETCH_GIST_FILE_REQUEST]: fetchGistFileRequest,\r\n  [FETCH_GIST_FILE_SUCCESS]: fetchGistFileSuccess,\r\n  [FETCH_GIST_FILE_FAILURE]: fetchGistFileFailure,\r\n  [CHANGE_GIST]: changeGist,\r\n  [UPDATE_GISTS_START]: updateGistsStart,\r\n  [UPDATE_GISTS_FINISH]: updateGistsFinish,\r\n  [UPDATE_GIST_SUCCESS]: updateGistSuccess,\r\n  [UPDATE_GIST_ERROR]: updateGistError,\r\n  [FILE_ADD]: fileAdd\r\n})\r\n\r\n","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nexport const user = (state=defaultState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.payload,\r\n        error: defaultState.error\r\n      }\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: defaultState.data,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  token: '',\r\n  error: {},\r\n  isAuth: false\r\n}\r\n\r\nconst fetchGhTokenRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGhTokenSuccess = (state, action) => ({\r\n  pending: false,\r\n  token: action.payload,\r\n  error: defaultState.error,\r\n  isAuth: true\r\n})\r\n\r\nconst fetchGhTokenError = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst logout = (state) => ({\r\n  ...state,\r\n  token: defaultState.token,\r\n  isAuth: false\r\n})\r\n\r\nexport const login = createReducer(defaultState, {\r\n  [FETCH_GH_TOKEN_REQUEST]: fetchGhTokenRequest,\r\n  [FETCH_GH_TOKEN_SUCCESS]: fetchGhTokenSuccess,\r\n  [FETCH_GH_TOKEN_ERROR]: fetchGhTokenError,\r\n  [LOGOUT]: logout\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { gists } from './gists'\r\nimport { user } from './user'\r\nimport { login } from './login'\r\n\r\nconst rootReducer = combineReducers({\r\n  gists,\r\n  user,\r\n  login\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'localforage'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(persistedReducer, composeEnhancers(\r\n  applyMiddleware(\r\n    thunk\r\n  )\r\n))\r\nexport const persistor = persistStore(store)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n// import promiseMiddleware from 'redux-promise'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport App from './App';\r\nimport './assets/styles/style.scss'\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { store, persistor } from './configureStore'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}