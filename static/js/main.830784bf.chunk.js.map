{"version":3,"sources":["actions/gist.js","constants/gist.js","helpers/parseTitle.js","containers/Gists.js","components/GistData.js","containers/Gist.js","constant.js","actions/login.js","api/index.js","api/get.js","actions/user.js","constants/user.js","api/patch.js","actions/gists.js","constants/gists.js","containers/User.js","containers/Sync.js","App.js","registerServiceWorker.js","reducers/gist.js","helpers/createReducers.js","reducers/gists.js","reducers/user.js","reducers/login.js","reducers/index.js","configureStore.js","index.js"],"names":["fetchGistFile","gist","dispatch","type","payload","name","file","filename","id","fetch","raw_url","then","res","text","data","gist_fileSuccess","catch","error","gist_fileFailure","parseTitle","str","titleEndIndex","search","title","slice","length","description","tags","match","trim","Gists_Gists","displayGists","gists","_this","props","map","react_default","a","createElement","onClick","setGist","key","className","chooseGistClass","classes","this","active","changed","react","containers_Gists","Object","es","_ref","e","preventDefault","gist_setActiveGist","loadGistFiles","GistData","updateGist","changeFileData","getFileData","fileAdd","keys","files","filelang","language","toLowerCase","lang","prism_default","languages","hasOwnProperty","content","lib_default","value","onValueChange","highlight","code","padding","style","fontFamily","fontSize","getFile","console","log","onFileAdd","Gist_Gist","Gist","Gist_classCallCheck","Gist_possibleConstructorReturn","Gist_getPrototypeOf","call","displayGist","find","item","onUpdateGist","changeCode","setState","handleKeyboard","ctrlKey","metaKey","String","fromCharCode","which","state","window","addEventListener","removeEventListener","containers_Gist","loadFile","gist_changeGist","gist_fileAdd","login_getGhCode","redirect_uri","location","origin","pathname","query","query_string_default","stringify","client_id","scope","link","href","makeUrl","path","concat","headers","Authorization","localStorage","getItem","response","ok","json","Err","status","message","statusText","url","prototype","create","Error","constructor","method","getData","getUser","getGists","user_fetchUser","user_userFailure","patchData","body","JSON","prepareJsonPost","gists_fetchGists","gists_gistsSuccess","gists_loadGistsFiles","gists_gistsFailure","forEach","gists_updateGists","changedGists","filter","patchGist","gist_updateGistSuccess","ex","finally","User_User","loading","login","pending","_this$props","onFetchToken","isAuth","user","html_url","src","avatar_url","alt","onLogout","containers_User","urlParams","parse","_data$token","token","access_token","login_tokenError","setItem","login_fetchToken","removeItem","onFetchData","Sync_Sync","onUpdateGists","patching","containers_Sync","src_App","isAuthenticated","BrowserRouter","basename","Route","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createReducer","initialState","handlers","arguments","undefined","action","defaultState","gists_gists","gists_defineProperty","_createReducer","gists_objectSpread","_objectSpread","_action$payload","newState","gistIndex","findIndex","_action$payload2","index","user_defaultState","login_defaultState","login_defineProperty","login_createReducer","login_objectSpread","reducers","redux","user_objectSpread","persistConfig","storage","localforage_default","persistedReducer","redux_persist_es","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","redux_thunk_es","persistor","react_dom_default","render","integration_react","document","getElementById","URL","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.830784bf.chunk.js","sourcesContent":["import {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  FILE_ADD\r\n} from '../constant'\r\n\r\n\r\nexport const setActiveGist = id => ({\r\n  type: SET_ACTIVE_GIST,\r\n  payload: id\r\n})\r\n \r\nexport const fileRequest = data => ({\r\n  type: FETCH_GIST_FILE_REQUEST,\r\n  payload: data\r\n})\r\n\r\nexport const fileSuccess = data => ({\r\n  type: FETCH_GIST_FILE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const fileFailure = error => ({\r\n  type: FETCH_GIST_FILE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const changeGist = gist => ({\r\n  type: CHANGE_GIST,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistSuccess = gist => ({\r\n  type: UPDATE_GIST_SUCCESS,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistError = error => ({\r\n  type: UPDATE_GIST_ERROR,\r\n  payload: error\r\n})\r\n\r\nexport const fileAdd = (gist) => ({\r\n  type: FILE_ADD,\r\n  payload: gist\r\n})\r\n\r\nexport const loadGistFiles = gist => dispatch => {\r\n  Object.keys(gist.files).forEach(name => {\r\n    dispatch(fetchGistFile({\r\n      id: gist.id,\r\n      file: gist.files[name]\r\n    }))\r\n  })\r\n}\r\n\r\nexport const fetchGistFile = gist => dispatch => {\r\n  dispatch(fileRequest({\r\n    name: gist.file.filename,\r\n    id: gist.id\r\n  }))\r\n  fetch(gist.file.raw_url)\r\n    .then(res => res.text())\r\n    .then(data => {\r\n      dispatch(fileSuccess({\r\n        id: gist.id,\r\n        name: gist.file.filename,\r\n        data\r\n      }))\r\n    })\r\n    .catch(error => dispatch(fileFailure(error)))\r\n}","export const SET_ACTIVE_GIST = 'SET_ACTIVE_GIST'\r\nexport const FETCH_GIST_FILE = 'FETCH_GIST_FILE'\r\nexport const FETCH_GIST_FILE_REQUEST = 'FETCH_GIST_FILE_REQUEST'\r\nexport const FETCH_GIST_FILE_SUCCESS = 'FETCH_GIST_FILE_SUCCESS'\r\nexport const FETCH_GIST_FILE_FAILURE = 'FETCH_GIST_FILE_FAILURE'","export const parseTitle = (str) => {\r\n  let titleEndIndex = str.search(']')\r\n  let title = (titleEndIndex !== -1) ? str.slice(1, titleEndIndex) : str.slice(0, str.length)\r\n  let description = (titleEndIndex !== -1) ? str.slice(titleEndIndex + 1, str.length) : str.slice(0, str.length)\r\n  let tags = str.match(/#[\\w\\-_]*/g)\r\n\r\n  return {\r\n    title: title.trim(),\r\n    description: description.trim(),\r\n    tags\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setActiveGist } from '../actions/gist'\r\nimport { parseTitle } from '../helpers/parseTitle'\r\n\r\nclass Gists extends Component {\r\n\r\n  chooseGistClass (gist) {\r\n    let classes = ''\r\n    classes += (gist.id === this.props.gists.active) ? 'active ' : ''\r\n    classes += (gist.changed) ? 'changed ' : ''\r\n    return classes\r\n  }\r\n\r\n  displayGists = () => {\r\n    let gists = this.props.gists.data\r\n    if (gists.length) {\r\n      return gists.map(gist => {\r\n        let name = parseTitle(gist.description)\r\n        return (\r\n          <button \r\n            onClick={this.props.setGist(gist.id)} \r\n            key={gist.id}\r\n            className={this.chooseGistClass(gist)}\r\n          >\r\n            { name.title }\r\n          </button>\r\n        )\r\n      })\r\n    } else {\r\n      return <div>no gists</div>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gists-list\">\r\n        {this.displayGists()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setGist: id => e => {\r\n    e.preventDefault()\r\n    dispatch(setActiveGist(id))\r\n  },\r\n  loadGistFiles: gist => {\r\n    // let files = gist.files\r\n    // files.map(file => {\r\n    //   file\r\n    // })\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gists)","import React from 'react'\r\nimport Editor from 'react-simple-code-editor'\r\nimport Prism from 'prismjs'\r\n\r\nexport default ({ gist, updateGist, changeFileData, getFileData, fileAdd }) => {\r\n  function getFile (filename) {\r\n    let file = gist.files[filename]\r\n    let filelang = (file.language) ? file.language.toLowerCase() : 'clike'\r\n    let lang = (Prism.languages.hasOwnProperty(filelang)) ? filelang : 'clike'\r\n    let content = getFileData(filename) || ''\r\n       \r\n\r\n    return (\r\n      <div key={filename} className=\"gist-file\">\r\n        <h3>{filename}</h3>\r\n        <Editor\r\n          className=\"gist-editor\"\r\n          value={content}\r\n          onValueChange={changeFileData(filename)} \r\n          highlight={code => {\r\n            return Prism.highlight(code, Prism.languages[lang])\r\n          }}\r\n          padding={10}\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 14,\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function getFiles () {\r\n    const result = Object.keys(gist.files).map(filename => {\r\n      return getFile(filename)\r\n    })\r\n    return result\r\n  }\r\n\r\n  const onFileAdd = gist => e => {\r\n    console.log('Adding file')\r\n    fileAdd(gist)\r\n  }\r\n\r\n  return (\r\n    <div className=\"gist\">\r\n      <h3>{gist.description}</h3>\r\n      <div>\r\n        {getFiles()}\r\n      </div>\r\n      <div className=\"gist-actions\">\r\n        <button className=\"btn\" onClick={onFileAdd(gist)}>Add file</button>\r\n        <button className=\"btn gist-submit\" onClick={updateGist(gist)}>Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport GistData from '../components/GistData'\r\n\r\nimport {\r\n  fetchGistFile,\r\n  changeGist,\r\n  fileAdd\r\n} from '../actions/gist'\r\n\r\n\r\nclass Gist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      code: ''\r\n    }\r\n  }\r\n\r\n  displayGist = () => {\r\n    let {\r\n      gists\r\n    } = this.props\r\n    if (!gists.active)\r\n      return 'no active gist'\r\n    else {\r\n      this.gist = gists.data.find(item => item.id === gists.active)\r\n      return <GistData \r\n        gist={this.gist} \r\n        updateGist={this.props.onUpdateGist}\r\n        changeFileData={this.changeFileData}\r\n        changeCode={this.changeCode}\r\n        getFileData={this.getFileData}\r\n        fileAdd={this.props.onFileAdd}\r\n      />\r\n    }\r\n  }\r\n\r\n  getFileData = filename => {\r\n    return this.gist.files[filename].content\r\n  }\r\n\r\n  changeFileData = filename => code => {\r\n    this.setState({ code })\r\n    this.gist.files[filename].content = code\r\n  }\r\n\r\n  handleKeyboard = (e) => {\r\n    if (e.ctrlKey || e.metaKey) {\r\n      switch (String.fromCharCode(e.which).toLowerCase()) {\r\n        case 's':\r\n          if (this.gist) this.props.onUpdateGist(this.gist)(e)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyboard)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyboard);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.displayGist() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  loadFile: (data) => e => {\r\n    dispatch(fetchGistFile(data))\r\n  },\r\n  onUpdateGist: (gist) => e => {\r\n    if (e) e.preventDefault()\r\n    dispatch(changeGist(gist))\r\n  },\r\n  onFileAdd: (gist) => {\r\n    dispatch(fileAdd(gist))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gist)","export const FETCH_GH_TOKEN_REQUEST = 'FETCH_GH_TOKEN_REQUEST'\r\nexport const FETCH_GH_TOKEN_SUCCESS = 'FETCH_GH_TOKEN_SUCCESS'\r\nexport const FETCH_GH_TOKEN_ERROR = 'FETCH_GH_TOKEN_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const CHANGE_GIST = 'CHANGE_GIST'\r\n\r\nexport const UPDATE_GIST = 'UPDATE_GIST'\r\nexport const UPDATE_GIST_SUCCESS = 'UPDATE_GIST_SUCCESS'\r\nexport const UPDATE_GIST_ERROR = 'UPDATE_GIST_ERROR'\r\n\r\nexport const UPDATE_GISTS_START = 'UPDATE_GISTS_START'\r\nexport const UPDATE_GISTS_FINISH = 'UPDATE_GISTS_FINISH'\r\n\r\nexport const FILE_ADD = 'FILE_ADD'","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\nimport queryString from 'query-string'\r\n\r\nconst tokenRequest = () => ({\r\n  type: FETCH_GH_TOKEN_REQUEST\r\n})\r\n\r\nconst tokenSuccess = (token) => ({\r\n  type: FETCH_GH_TOKEN_SUCCESS,\r\n  payload: token\r\n})\r\n\r\nconst tokenError = (error) => ({\r\n  type: FETCH_GH_TOKEN_ERROR,\r\n  payload: error,\r\n  error: true\r\n})\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('ghtoken')\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport const getGhCode = () => {\r\n  let redirect_uri = window.location.origin + window.location.pathname\r\n  let query = queryString.stringify({\r\n    client_id: '169a193bbe75c0e129d0',\r\n    scope: 'gist',\r\n    redirect_uri\r\n  })\r\n  let link = `https://github.com/login/oauth/authorize?${query}`\r\n  window.location.href = link\r\n}\r\n\r\nexport const fetchToken = dispatch => {\r\n  const urlParams = queryString.parse(window.location.search)\r\n  if (!urlParams.code) return\r\n  const query = queryString.stringify({\r\n    code: urlParams.code\r\n  })\r\n  const url = `https://server-aenjidvwww.now.sh/callback?${query}`\r\n  dispatch(tokenRequest())\r\n\r\n  return fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      let { access_token, error } = data.token\r\n      if (error) {\r\n        dispatch(tokenError(error))\r\n        return\r\n      }\r\n      localStorage.setItem('ghtoken', access_token)\r\n      dispatch(tokenSuccess(access_token))\r\n    })\r\n}\r\n","const apiUrl = 'https://api.github.com'\r\n\r\nconst makeUrl = path => {\r\n  return `${apiUrl}${path}`\r\n}\r\n\r\nconst headers = () => ({\r\n    Authorization: `token ${localStorage.getItem('ghtoken')}`\r\n})\r\n\r\nexport const prepareJsonFetch = method => path => url => {\r\n  url = url || makeUrl(path)\r\n  return fetch(url, {\r\n      method,\r\n      headers: headers(),\r\n    })\r\n    .then(response)\r\n}\r\n\r\nexport const prepareJsonPost = method => path => body => {\r\n  return fetch(makeUrl(path), {\r\n      method,\r\n      headers: headers(),\r\n      body: JSON.stringify( body ) \r\n    })\r\n    .then(response)\r\n}\r\n\r\nconst response = res => {\r\n  if (res.ok)\r\n    return res.json()\r\n  else \r\n    throw new Err(res)\r\n}\r\n\r\nfunction Err(error) {\r\n  this.name = \"Error\"\r\n  this.status = error.status\r\n  this.message = error.statusText\r\n  this.url = error.url\r\n}\r\nErr.prototype = Object.create(Error.prototype)\r\nErr.prototype.constructor = Err","import { prepareJsonFetch } from './index'\r\n\r\nconst getData = prepareJsonFetch('GET')\r\n\r\nexport const getUser = getData(`/user`)\r\nexport const getGists = getData(`/gists`)","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nimport {\r\n  getUser\r\n} from '../api/get'\r\n\r\nexport const userRequest = () => ({\r\n  type: FETCH_USER_REQUEST\r\n})\r\n\r\nexport const userSuccess = user => ({\r\n  type: FETCH_USER_SUCCESS,\r\n  payload: user\r\n})\r\n\r\nexport const userFailure = error => ({\r\n  type: FETCH_USER_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchUser = dispatch => {\r\n  dispatch(userRequest())\r\n  getUser()\r\n    .then(data => dispatch(userSuccess(data)))\r\n    .catch(error => dispatch(userFailure(error)))\r\n}","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\r\n\r\n","import { prepareJsonPost } from './index'\r\n\r\nconst patchData = prepareJsonPost('PATCH')\r\n\r\nexport const patchGist = (gist) => patchData(`/gists/${gist.id}`)(gist)","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\n\r\nimport {\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH\r\n} from '../constant'\r\n\r\nimport {\r\n  getGists\r\n} from '../api/get'\r\nimport { patchGist } from '../api/patch'\r\n\r\nimport {\r\n  loadGistFiles,\r\n  updateGistSuccess,\r\n  updateGistError\r\n} from './gist'\r\n\r\nexport const gistsRequest = () => ({\r\n  type: FETCH_GISTS_REQUEST\r\n})\r\n\r\nexport const updateGistsStart = () => ({\r\n  type: UPDATE_GISTS_START\r\n})\r\n\r\nexport const updateGistsFinish = () => ({\r\n  type: UPDATE_GISTS_FINISH\r\n})\r\n\r\nexport const gistsSuccess = gists => ({\r\n  type: FETCH_GISTS_SUCCESS,\r\n  payload: gists\r\n})\r\n\r\nexport const gistsFailure = error => ({\r\n  type: FETCH_GISTS_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchGists = dispatch => {\r\n  dispatch(gistsRequest())\r\n  getGists()\r\n    .then(gists => {\r\n      dispatch(gistsSuccess(gists))\r\n      dispatch(loadGistsFiles(gists))\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      return dispatch(gistsFailure(error))\r\n    })\r\n}\r\n\r\nexport const loadGistsFiles = gists => dispatch => {\r\n  gists.forEach(gist => {\r\n    dispatch(loadGistFiles(gist))\r\n  })\r\n}\r\n\r\nexport const updateGists = gists => dispatch => {\r\n  const changedGists = gists.data.filter(gist => gist.changed)\r\n  changedGists.forEach(gist => {\r\n    dispatch(updateGistsStart())\r\n    patchGist(gist)\r\n      .then(gist => {\r\n        dispatch(updateGistSuccess(gist))\r\n      })\r\n      .catch(ex => {\r\n        dispatch(updateGistError(ex))\r\n      })\r\n      .finally(res => {\r\n        dispatch(updateGistsFinish())\r\n      })\r\n  })\r\n  return changedGists\r\n}","export const FETCH_GISTS_REQUEST = 'FETCH_GISTS_REQUEST'\r\nexport const FETCH_GISTS_SUCCESS = 'FETCH_GISTS_SUCCESS'\r\nexport const FETCH_GISTS_FAILURE = 'FETCH_GISTS_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  getGhCode,\r\n  fetchToken,\r\n  logout\r\n} from '../actions/login'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { \r\n  fetchGists \r\n} from '../actions/gists';\r\n\r\nclass User extends Component {\r\n\r\n  loading = () => {\r\n    if (this.props.login.pending) \r\n    return 'loading...'\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {\r\n      login,\r\n      onFetchToken\r\n    } = this.props\r\n    if (!login.isAuth)\r\n      onFetchToken()\r\n  }\r\n\r\n  render() {\r\n    let user = this.props.user.data\r\n    return (\r\n      <div className=\"header-user\">\r\n        <a href={user.html_url} className=\"header-user-name\">\r\n          <img src={user.avatar_url} alt=\"\" className=\"header-user-img\" />\r\n          { user.login }\r\n        </a>\r\n        \r\n        { this.loading() }\r\n        <button className=\"btn\" onClick={getGhCode}>Login</button>\r\n        <button className=\"btn\" onClick={this.props.onLogout}>Logout</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ login, user }) => ({\r\n  login, user\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchToken: () => {\r\n    fetchToken(dispatch).then(res => {\r\n      fetchUser(dispatch)\r\n      fetchGists(dispatch)\r\n    })\r\n  },\r\n  onLogout: () => {\r\n    dispatch(logout())\r\n  },\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  },\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(User)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { fetchGists, updateGists } from '../actions/gists';\r\n\r\n\r\nclass Sync extends Component {\r\n\r\n  componentDidMount() {\r\n    // this.props.onFetchData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sync\">\r\n        <button className=\"btn\" onClick={this.props.onFetchData}>pull</button>     \r\n        <button className=\"btn\" onClick={this.props.onUpdateGists(this.props.gists)}>push</button>\r\n        <div className=\"status\">{ this.props.gists.patching ? 'pushing github' : ''}</div>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  },\r\n  onUpdateGists: (gists) => () => {\r\n    dispatch(updateGists(gists))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Sync)","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n// import Todo from './containers/Todo'\r\nimport Gists from './containers/Gists';\r\nimport Gist from './containers/Gist';\r\nimport User from './containers/User';\r\nimport Sync from './containers/Sync';\r\n\r\nclass App extends Component {\r\n\r\n  isAuthenticated = false\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      {/* <Router> */}\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <Sync />\r\n            <User />\r\n          </header>\r\n          <aside>\r\n            <Gists />\r\n          </aside>\r\n          <main>\r\n            <Route exact path=\"/\" component={Gist} />\r\n          </main>\r\n          <footer>\r\n            footer\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const setActiveGist = (state, action) => ({\r\n  ...state,\r\n  active: action.payload\r\n})\r\nexport const fetchGistFileRequest = (state, action) => {\r\n  let {\r\n    name, id\r\n  } = action.payload\r\n  let newState = {...state}\r\n\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = true\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileSuccess = (state, action) => {\r\n  let {\r\n    id, name, data\r\n  } = action.payload\r\n  let newState = {...state}\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = false\r\n  file.content = data\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileFailure = (state, action) => {\r\n  return state\r\n}\r\n\r\nexport const changeGist = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = true\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistSuccess = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistError = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const fileAdd = (state, action) => {\r\n  console.log('reducer', action.payload)\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.files['new'] = {\r\n    filename: 'new',\r\n    content: ''\r\n  }\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\nimport {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH,\r\n  FILE_ADD\r\n} from '../constant'\r\n\r\nimport {\r\n  setActiveGist,\r\n  fetchGistFileRequest,\r\n  fetchGistFileSuccess,\r\n  fetchGistFileFailure,\r\n  changeGist,\r\n  updateGistSuccess,\r\n  updateGistError,\r\n  fileAdd\r\n} from './gist'\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nconst fetchGistsRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGistsSuccess = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  data: action.payload,\r\n  error: defaultState.error\r\n})\r\n\r\nconst fetchGistsFailure = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst updateGistsStart = (state) =>({\r\n  ...state,\r\n  patching: true\r\n})\r\n\r\nconst updateGistsFinish = (state) => ({\r\n  ...state,\r\n  patching: false\r\n})\r\n\r\nexport const gists = createReducer(defaultState, {\r\n  [FETCH_GISTS_REQUEST]: fetchGistsRequest,\r\n  [FETCH_GISTS_SUCCESS]: fetchGistsSuccess,\r\n  [FETCH_GISTS_FAILURE]: fetchGistsFailure,\r\n  [SET_ACTIVE_GIST]: setActiveGist,\r\n  [FETCH_GIST_FILE_REQUEST]: fetchGistFileRequest,\r\n  [FETCH_GIST_FILE_SUCCESS]: fetchGistFileSuccess,\r\n  [FETCH_GIST_FILE_FAILURE]: fetchGistFileFailure,\r\n  [CHANGE_GIST]: changeGist,\r\n  [UPDATE_GISTS_START]: updateGistsStart,\r\n  [UPDATE_GISTS_FINISH]: updateGistsFinish,\r\n  [UPDATE_GIST_SUCCESS]: updateGistSuccess,\r\n  [UPDATE_GIST_ERROR]: updateGistError,\r\n  [FILE_ADD]: fileAdd\r\n})\r\n\r\n","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nexport const user = (state=defaultState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.payload,\r\n        error: defaultState.error\r\n      }\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: defaultState.data,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  token: '',\r\n  error: {},\r\n  isAuth: false\r\n}\r\n\r\nconst fetchGhTokenRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGhTokenSuccess = (state, action) => ({\r\n  pending: false,\r\n  token: action.payload,\r\n  error: defaultState.error,\r\n  isAuth: true\r\n})\r\n\r\nconst fetchGhTokenError = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst logout = (state) => ({\r\n  ...state,\r\n  token: defaultState.token,\r\n  isAuth: false\r\n})\r\n\r\nexport const login = createReducer(defaultState, {\r\n  [FETCH_GH_TOKEN_REQUEST]: fetchGhTokenRequest,\r\n  [FETCH_GH_TOKEN_SUCCESS]: fetchGhTokenSuccess,\r\n  [FETCH_GH_TOKEN_ERROR]: fetchGhTokenError,\r\n  [LOGOUT]: logout\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { gists } from './gists'\r\nimport { user } from './user'\r\nimport { login } from './login'\r\n\r\nconst rootReducer = combineReducers({\r\n  gists,\r\n  user,\r\n  login\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'localforage'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(persistedReducer, composeEnhancers(\r\n  applyMiddleware(\r\n    thunk\r\n  )\r\n))\r\nexport const persistor = persistStore(store)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n// import promiseMiddleware from 'redux-promise'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport App from './App';\r\nimport './assets/styles/style.scss'\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { store, persistor } from './configureStore'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}