{"version":3,"sources":["actions/gist.js","constants/gist.js","helpers/parseTitle.js","containers/Gists.js","components/GistFile.js","containers/GistContent.js","constant.js","containers/Gist.js","actions/login.js","api/index.js","api/get.js","actions/user.js","constants/user.js","api/patch.js","api/post.js","api/delete.js","actions/gists.js","constants/gists.js","containers/User.js","containers/Sync.js","containers/AddGist.js","App.js","registerServiceWorker.js","reducers/gist.js","helpers/createReducers.js","reducers/gists.js","reducers/activeGist.js","reducers/user.js","reducers/login.js","reducers/index.js","configureStore.js","index.js"],"names":["gist_setActiveGist","gist","type","payload","fetchGistFile","dispatch","name","file","filename","id","fetch","raw_url","then","res","text","data","gist_fileSuccess","catch","error","gist_fileFailure","parseTitle","str","titleEndIndex","search","title","slice","length","description","tags","match","trim","Gists_Gists","displayGists","gists","_this","props","map","i","react_default","a","createElement","key","onClick","setGist","className","chooseGistClass","classes","this","active","changed","react","containers_Gists","Object","es","_ref","e","preventDefault","loadGistFiles","GistFile","onFileRename","onFileRemove","onFileContentChange","filelang","language","toLowerCase","lang","prism_default","languages","hasOwnProperty","data-name","value","onChange","lib_default","content","onValueChange","highlight","code","padding","style","fontFamily","fontSize","GistContent_GistContent","keys","files","concat","_this$props","assign","deleted","onGistRename","onGistDelete","ref","getFiles","onFileAdd","updateGist","containers_GistContent","target","gist_fileRename","gist_fileContentChange","gist_gistDelete","Gist_Gist","submitHandler","findIndex","g","onUpdateGist","onAddGist","displayGist","handleKeyboard","ctrlKey","metaKey","String","fromCharCode","which","window","addEventListener","removeEventListener","containers_Gist","forEach","gist_changeGist","console","log","gist_gistAdd","login_getGhCode","redirect_uri","location","origin","pathname","query","query_string_default","stringify","client_id","scope","link","href","makeUrl","path","headers","Authorization","localStorage","getItem","prepareJsonFetch","method","url","response","prepareJsonPost","body","JSON","ok","json","Err","status","message","statusText","prototype","create","Error","constructor","getData","getUser","getGists","user_fetchUser","user_userFailure","patchData","postData","deleteData","gists_fetchGists","gists_gistsSuccess","gists_loadGistsFiles","gists_gistsFailure","gists_sendDataToGh","promise","gist_updateGistSuccess","ex","finally","gists_updateGists","updatedGists","filter","added","postAddGist","patchGist","User_User","loading","login","pending","onFetchToken","isAuth","user","html_url","src","avatar_url","alt","onLogout","containers_User","urlParams","parse","_data$token","token","access_token","login_tokenError","setItem","login_fetchToken","removeItem","onFetchData","Sync_Sync","onUpdateGists","find","activeGist","patching","containers_Sync","AddGist_AddGist","onGistAdd","containers_AddGist","src_App","isAuthenticated","BrowserRouter","basename","Route","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","createReducer","initialState","handlers","arguments","undefined","action","defaultState","gists_gists","gists_defineProperty","_createReducer","gists_objectSpread","_action$payload","newState","gistIndex","_action$payload2","index","item","push","activeGist_gist","activeGist_defineProperty","activeGist_createReducer","activeGist_objectSpread","Date","now","isNew","public","user_defaultState","login_defaultState","login_defineProperty","login_createReducer","login_objectSpread","reducers","redux","user_objectSpread","persistConfig","storage","localforage_default","persistedReducer","redux_persist_es","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","redux_thunk_es","persistor","react_dom_default","render","integration_react","document","getElementById","URL","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f8523dcd.chunk.js","sourcesContent":["import {\r\n  SET_ACTIVE_GIST,\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  NEW_GIST,\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  FILE_ADD,\r\n  FILE_REMOVE,\r\n  FILE_RENAME,\r\n  FILE_CONTENT_CHANGE,\r\n  GIST_ADD,\r\n  GIST_DELETE,\r\n  GIST_RENAME\r\n} from '../constant'\r\n\r\n\r\nexport const setActiveGist = gist => ({\r\n  type: SET_ACTIVE_GIST,\r\n  payload: gist\r\n})\r\n \r\nexport const fileRequest = data => ({\r\n  type: FETCH_GIST_FILE_REQUEST,\r\n  payload: data\r\n})\r\n\r\nexport const fileSuccess = data => ({\r\n  type: FETCH_GIST_FILE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const fileFailure = error => ({\r\n  type: FETCH_GIST_FILE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const changeGist = gist => ({\r\n  type: CHANGE_GIST,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistSuccess = gist => ({\r\n  type: UPDATE_GIST_SUCCESS,\r\n  payload: gist\r\n})\r\n\r\nexport const updateGistError = error => ({\r\n  type: UPDATE_GIST_ERROR,\r\n  payload: error\r\n})\r\n\r\nexport const fileAdd = () => ({\r\n  type: FILE_ADD\r\n})\r\n\r\nexport const fileRename = (target, filename) => ({\r\n  type: FILE_RENAME,\r\n  payload: {\r\n    target, filename\r\n  }\r\n})\r\n\r\nexport const fileRemove = (filename) => ({\r\n  type: FILE_REMOVE,\r\n  payload: filename\r\n})\r\n\r\nexport const fileContentChange = (filename, content) => ({\r\n  type: FILE_CONTENT_CHANGE,\r\n  payload: {\r\n    filename, content\r\n  }\r\n})\r\n\r\nexport const newGist = () => ({\r\n  type: NEW_GIST\r\n})\r\n\r\nexport const gistAdd = (gist) => ({\r\n  type:  GIST_ADD,\r\n  payload: gist\r\n})\r\n\r\nexport const gistDelete = (id) => ({\r\n  type: GIST_DELETE,\r\n  payload: id\r\n})\r\n\r\nexport const gistRename = (name) => ({\r\n  type: GIST_RENAME,\r\n  payload: name\r\n})\r\n\r\nexport const loadGistFiles = gist => dispatch => {\r\n  Object.keys(gist.files).forEach(name => {\r\n    dispatch(fetchGistFile({\r\n      id: gist.id,\r\n      file: gist.files[name]\r\n    }))\r\n  })\r\n}\r\n\r\nexport const fetchGistFile = gist => dispatch => {\r\n  dispatch(fileRequest({\r\n    name: gist.file.filename,\r\n    id: gist.id\r\n  }))\r\n  fetch(gist.file.raw_url)\r\n    .then(res => res.text())\r\n    .then(data => {\r\n      dispatch(fileSuccess({\r\n        id: gist.id,\r\n        name: gist.file.filename,\r\n        data\r\n      }))\r\n    })\r\n    .catch(error => dispatch(fileFailure(error)))\r\n}","export const SET_ACTIVE_GIST = 'SET_ACTIVE_GIST'\r\nexport const FETCH_GIST_FILE = 'FETCH_GIST_FILE'\r\nexport const FETCH_GIST_FILE_REQUEST = 'FETCH_GIST_FILE_REQUEST'\r\nexport const FETCH_GIST_FILE_SUCCESS = 'FETCH_GIST_FILE_SUCCESS'\r\nexport const FETCH_GIST_FILE_FAILURE = 'FETCH_GIST_FILE_FAILURE'","export const parseTitle = (str) => {\r\n  let titleEndIndex = str.search(']')\r\n  let title = (titleEndIndex !== -1) ? str.slice(1, titleEndIndex) : str.slice(0, str.length)\r\n  let description = (titleEndIndex !== -1) ? str.slice(titleEndIndex + 1, str.length) : str.slice(0, str.length)\r\n  let tags = str.match(/#[\\w\\-_]*/g)\r\n\r\n  return {\r\n    title: title.trim(),\r\n    description: description.trim(),\r\n    tags\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setActiveGist } from '../actions/gist'\r\nimport { parseTitle } from '../helpers/parseTitle'\r\n\r\nclass Gists extends Component {\r\n\r\n  chooseGistClass (gist) {\r\n    let classes = ''\r\n    classes += (gist.id === this.props.gists.active) ? 'active ' : ''\r\n    classes += (gist.changed) ? 'changed ' : ''\r\n    return classes\r\n  }\r\n\r\n  displayGists = () => {\r\n    let gists = this.props.gists.data\r\n    if (gists.length) {\r\n      return gists.map((gist, i) => {\r\n        if (!gist.description) return <div key={i}>hmm</div> \r\n        let name = parseTitle(gist.description)\r\n        return (\r\n          <button \r\n            onClick={this.props.setGist(gist)} \r\n            key={i}\r\n            className={this.chooseGistClass(gist)}\r\n          >\r\n            { name.title }\r\n          </button>\r\n        )\r\n      })\r\n    } else {\r\n      return <div>no gists</div>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gists-list\">\r\n        {this.displayGists()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists }) => ({\r\n  gists\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setGist: gist => e => {\r\n    e.preventDefault()\r\n    dispatch(setActiveGist(gist))\r\n  },\r\n  loadGistFiles: gist => {\r\n    // let files = gist.files\r\n    // files.map(file => {\r\n    //   file\r\n    // })\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gists)","import React from 'react'\r\nimport Editor from 'react-simple-code-editor'\r\nimport Prism from 'prismjs'\r\n\r\nexport default ({ file, filename, onFileRename, onFileRemove, onFileContentChange }) => {\r\n\r\n  let filelang = (file && file.language) ? file.language.toLowerCase() : 'clike'\r\n  let lang = (Prism.languages.hasOwnProperty(filelang)) ? filelang : 'clike'\r\n\r\n  return (\r\n    <div className=\"gist-file\" >\r\n      <div className=\"gist-file-top\">\r\n        <input\r\n          className=\"gist-file-name\"\r\n          data-name={filename}\r\n          value={file.filename}\r\n          onChange={onFileRename(filename)}\r\n        />\r\n        <button \r\n          className=\"gist-file-remove btn\"\r\n          title=\"remove file\"\r\n          onClick={onFileRemove(filename)}\r\n        >remove file</button>\r\n      </div>\r\n      <Editor\r\n        className=\"gist-editor\"\r\n        value={file.content}\r\n        onValueChange={onFileContentChange(filename)} \r\n        highlight={code => {\r\n          return Prism.highlight(code, Prism.languages[lang])\r\n        }}\r\n        padding={10}\r\n        style={{\r\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n          fontSize: 14,\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport GistFile from '../components/GistFile'\r\n\r\nimport {\r\n  fileRename,\r\n  fileRemove,\r\n  fileAdd,\r\n  fileContentChange,\r\n  gistDelete,\r\n  gistRename\r\n} from '../actions/gist'\r\n\r\nclass GistContent extends Component {\r\n\r\n\r\n  getFiles () {\r\n    let gist = this.props.gist\r\n    if (!gist.description) return <div>no content</div>\r\n    return Object.keys(gist.files).map((filename, i) => {\r\n\r\n      let file = gist.files[filename]\r\n\r\n      if (file === null) {\r\n        return <div key={filename} className=\"removed\" title={`${filename} removed`}></div>\r\n      } else {\r\n        let { onFileRename, onFileRemove, onFileContentChange } = this.props\r\n        return <GistFile \r\n          key={filename}  {...{ file, filename, onFileRename, onFileRemove, onFileContentChange } }\r\n        />\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let gist = this.props.gist\r\n    return (\r\n      <div className=\"gist\">\r\n        <h3>{gist.description} {gist.deleted ? '--removed--': ''}</h3>\r\n        <div>\r\n          <textarea value={gist.description} onChange={this.props.onGistRename}></textarea>\r\n        </div>\r\n        <button className=\"btn\" onClick={this.props.onGistDelete(gist.id)}>remove gist</button>\r\n        <div className=\"gist-files\" ref=\"files\">\r\n          {this.getFiles()}\r\n        </div>\r\n        <div className=\"gist-actions\">\r\n          <button \r\n            className=\"btn\"\r\n            onClick={this.props.onFileAdd}\r\n          >Add file</button>\r\n          <button \r\n            className=\"btn gist-submit\" \r\n            onClick={this.props.updateGist(gist)}\r\n          >Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists, gist }) => ({\r\n  gists, gist\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFileRemove: (target) => e => {\r\n    dispatch(fileRemove(target))\r\n  },\r\n  onFileRename: (target) => e => {\r\n    dispatch(fileRename(target, e.target.value))\r\n  },\r\n  onFileAdd: (e) => {\r\n    dispatch(fileAdd())\r\n  },\r\n  onFileContentChange: filename => content => {\r\n    dispatch(fileContentChange(filename, content))\r\n  },\r\n  onGistDelete: id => e => {\r\n    dispatch(gistDelete(id))\r\n  },\r\n  onGistRename: e => {\r\n    dispatch(gistRename(e.target.value))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(GistContent)","export const FETCH_GH_TOKEN_REQUEST = 'FETCH_GH_TOKEN_REQUEST'\r\nexport const FETCH_GH_TOKEN_SUCCESS = 'FETCH_GH_TOKEN_SUCCESS'\r\nexport const FETCH_GH_TOKEN_ERROR = 'FETCH_GH_TOKEN_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const GIST_ADD = 'GIST_ADD'\r\nexport const GIST_DELETE = 'GIST_DELETE'\r\nexport const GIST_RENAME = 'GIST_RENAME'\r\nexport const NEW_GIST = 'NEW_GIST'\r\nexport const SET_ACTIVE_GIST = 'SET_ACTIVE_GIST'\r\nexport const CHANGE_GIST = 'CHANGE_GIST'\r\nexport const FETCH_GIST_FILE = 'FETCH_GIST_FILE'\r\nexport const FETCH_GIST_FILE_REQUEST = 'FETCH_GIST_FILE_REQUEST'\r\nexport const FETCH_GIST_FILE_SUCCESS = 'FETCH_GIST_FILE_SUCCESS'\r\nexport const FETCH_GIST_FILE_FAILURE = 'FETCH_GIST_FILE_FAILURE'\r\n\r\nexport const UPDATE_GIST = 'UPDATE_GIST'\r\nexport const UPDATE_GIST_SUCCESS = 'UPDATE_GIST_SUCCESS'\r\nexport const UPDATE_GIST_ERROR = 'UPDATE_GIST_ERROR'\r\n\r\nexport const UPDATE_GISTS_START = 'UPDATE_GISTS_START'\r\nexport const UPDATE_GISTS_FINISH = 'UPDATE_GISTS_FINISH'\r\n\r\nexport const FILE_ADD = 'FILE_ADD'\r\nexport const FILE_REMOVE = 'FILE_REMOVE'\r\nexport const FILE_RENAME = 'FILE_RENAME'\r\n\r\nexport const FILE_CONTENT_CHANGE = 'FILE_CONTENT_CHANGE'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport GistContent from './GistContent'\r\n\r\nimport {\r\n  changeGist, gistAdd\r\n} from '../actions/gist'\r\n\r\nclass Gist extends Component {\r\n\r\n  submitHandler = (gist) => e => {\r\n    if (e) e.preventDefault()\r\n    if (this.props.gists.data.findIndex(g => {\r\n      return g.id === gist.id\r\n    }) !== -1) {\r\n      this.props.onUpdateGist(gist)\r\n    } else {\r\n      this.props.onAddGist(gist)\r\n    }\r\n  }\r\n\r\n  displayGist = () => {\r\n    let {\r\n      gists, gist\r\n    } = this.props\r\n    if (!gists || !gist)\r\n      return 'no active gist'\r\n    else {\r\n      return <GistContent updateGist={this.submitHandler}/>\r\n    }\r\n  }\r\n\r\n  handleKeyboard = (e) => {\r\n    if (e.ctrlKey || e.metaKey) {\r\n      switch (String.fromCharCode(e.which).toLowerCase()) {\r\n        case 's':\r\n          this.submitHandler(this.props.gist)(e)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyboard)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyboard);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.displayGist() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists, gist }) => ({\r\n  gists, gist\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onUpdateGist: gist => {\r\n    Object.keys(gist.files).forEach(key => {\r\n      let file = gist.files[key]\r\n      if (file && !file.content) delete gist.files[key]\r\n    })\r\n    if (gist.files.length) {\r\n      dispatch(changeGist(gist))\r\n    } else {\r\n      console.log('No files in gist')\r\n    }\r\n  },\r\n  onAddGist: gist => {\r\n    dispatch(gistAdd(gist))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Gist)","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\nimport queryString from 'query-string'\r\n\r\nconst tokenRequest = () => ({\r\n  type: FETCH_GH_TOKEN_REQUEST\r\n})\r\n\r\nconst tokenSuccess = (token) => ({\r\n  type: FETCH_GH_TOKEN_SUCCESS,\r\n  payload: token\r\n})\r\n\r\nconst tokenError = (error) => ({\r\n  type: FETCH_GH_TOKEN_ERROR,\r\n  payload: error,\r\n  error: true\r\n})\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('ghtoken')\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport const getGhCode = () => {\r\n  let redirect_uri = window.location.origin + window.location.pathname\r\n  let query = queryString.stringify({\r\n    client_id: '169a193bbe75c0e129d0',\r\n    scope: 'gist',\r\n    redirect_uri\r\n  })\r\n  let link = `https://github.com/login/oauth/authorize?${query}`\r\n  window.location.href = link\r\n}\r\n\r\nexport const fetchToken = dispatch => {\r\n  const urlParams = queryString.parse(window.location.search)\r\n  if (!urlParams.code) return\r\n  const query = queryString.stringify({\r\n    code: urlParams.code\r\n  })\r\n  const url = `https://server-aenjidvwww.now.sh/callback?${query}`\r\n  dispatch(tokenRequest())\r\n\r\n  return fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      let { access_token, error } = data.token\r\n      if (error) {\r\n        dispatch(tokenError(error))\r\n        return\r\n      }\r\n      localStorage.setItem('ghtoken', access_token)\r\n      dispatch(tokenSuccess(access_token))\r\n    })\r\n}\r\n","const apiUrl = 'https://api.github.com'\r\n\r\nconst makeUrl = path => {\r\n  return `${apiUrl}${path}`\r\n}\r\n\r\nconst headers = () => ({\r\n    Authorization: `token ${localStorage.getItem('ghtoken')}`\r\n})\r\n\r\nexport const prepareJsonFetch = method => path => url => {\r\n  url = url || makeUrl(path)\r\n  console.log(url)\r\n  return fetch(url, {\r\n      method,\r\n      headers: headers(),\r\n    })\r\n    .then(response)\r\n}\r\n\r\nexport const prepareJsonPost = method => path => body => {\r\n  console.log(body)\r\n  return fetch(makeUrl(path), {\r\n      method,\r\n      headers: headers(),\r\n      body: JSON.stringify( body ) \r\n    })\r\n    .then(response)\r\n}\r\n\r\nconst response = res => {\r\n  if (res.ok)\r\n    return res.json()\r\n  else \r\n    throw new Err(res)\r\n}\r\n\r\nfunction Err(error) {\r\n  this.name = \"Error\"\r\n  this.status = error.status\r\n  this.message = error.statusText\r\n  this.url = error.url\r\n}\r\nErr.prototype = Object.create(Error.prototype)\r\nErr.prototype.constructor = Err","import { prepareJsonFetch } from './index'\r\n\r\nconst getData = prepareJsonFetch('GET')\r\n\r\nexport const getUser = getData(`/user`)\r\nexport const getGists = getData(`/gists`)","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nimport {\r\n  getUser\r\n} from '../api/get'\r\n\r\nexport const userRequest = () => ({\r\n  type: FETCH_USER_REQUEST\r\n})\r\n\r\nexport const userSuccess = user => ({\r\n  type: FETCH_USER_SUCCESS,\r\n  payload: user\r\n})\r\n\r\nexport const userFailure = error => ({\r\n  type: FETCH_USER_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchUser = dispatch => {\r\n  dispatch(userRequest())\r\n  getUser()\r\n    .then(data => dispatch(userSuccess(data)))\r\n    .catch(error => dispatch(userFailure(error)))\r\n}","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\r\n\r\n","import { prepareJsonPost } from './index'\r\n\r\nconst patchData = prepareJsonPost('PATCH')\r\n\r\nexport const patchGist = (gist) => patchData(`/gists/${gist.id}`)(gist)","import { prepareJsonPost } from './index'\r\n\r\nconst postData = prepareJsonPost('POST')\r\n\r\nexport const postAddGist = (gist) => postData(`/gists`)(gist)","import { prepareJsonFetch } from './index'\r\n\r\nconst deleteData = prepareJsonFetch('DELETE')\r\n\r\nexport const deleteGist = id => deleteData(`/gists/${id}`)()","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\n\r\nimport {\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH\r\n} from '../constant'\r\n\r\nimport {\r\n  getGists\r\n} from '../api/get'\r\nimport { patchGist } from '../api/patch'\r\nimport { postAddGist } from '../api/post'\r\nimport { deleteGist } from '../api/delete'\r\n\r\nimport {\r\n  loadGistFiles,\r\n  updateGistSuccess,\r\n  updateGistError\r\n} from './gist'\r\n\r\nexport const gistsRequest = () => ({\r\n  type: FETCH_GISTS_REQUEST\r\n})\r\n\r\nexport const updateGistsStart = () => ({\r\n  type: UPDATE_GISTS_START\r\n})\r\n\r\nexport const updateGistsFinish = () => ({\r\n  type: UPDATE_GISTS_FINISH\r\n})\r\n\r\nexport const gistsSuccess = gists => ({\r\n  type: FETCH_GISTS_SUCCESS,\r\n  payload: gists\r\n})\r\n\r\nexport const gistsFailure = error => ({\r\n  type: FETCH_GISTS_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchGists = dispatch => {\r\n  dispatch(gistsRequest())\r\n  getGists()\r\n    .then(gists => {\r\n      dispatch(gistsSuccess(gists))\r\n      dispatch(loadGistsFiles(gists))\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      return dispatch(gistsFailure(error))\r\n    })\r\n}\r\n\r\nexport const loadGistsFiles = gists => dispatch => {\r\n  gists.forEach(gist => {\r\n    dispatch(loadGistFiles(gist))\r\n  })\r\n}\r\n\r\nconst sendDataToGh = (promise, dispatch) => {\r\n  promise\r\n    .then(gist => {\r\n      dispatch(updateGistSuccess(gist))\r\n    })\r\n    .catch(ex => {\r\n      dispatch(updateGistError(ex))\r\n    })\r\n    .finally(res => {\r\n      dispatch(updateGistsFinish())\r\n    })\r\n}\r\n\r\nexport const updateGists = gists => dispatch => {\r\n  const updatedGists = gists.data.filter(gist => gist.changed || gist.added || gist.deleted)\r\n  updatedGists.forEach(gist => {\r\n    dispatch(updateGistsStart())\r\n    if (gist.deleted) {\r\n      sendDataToGh(deleteGist(gist.id), dispatch)\r\n    } else if (gist.added) {\r\n      sendDataToGh(postAddGist(gist), dispatch)\r\n    } else if (gist.changed) {\r\n      sendDataToGh(patchGist(gist), dispatch)\r\n    } \r\n  })\r\n  return updatedGists\r\n}","export const FETCH_GISTS_REQUEST = 'FETCH_GISTS_REQUEST'\r\nexport const FETCH_GISTS_SUCCESS = 'FETCH_GISTS_SUCCESS'\r\nexport const FETCH_GISTS_FAILURE = 'FETCH_GISTS_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  getGhCode,\r\n  fetchToken,\r\n  logout\r\n} from '../actions/login'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { \r\n  fetchGists \r\n} from '../actions/gists';\r\n\r\nclass User extends Component {\r\n\r\n  loading = () => {\r\n    if (this.props.login.pending) \r\n    return 'loading...'\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {\r\n      login,\r\n      onFetchToken\r\n    } = this.props\r\n    if (!login.isAuth)\r\n      onFetchToken()\r\n  }\r\n\r\n  render() {\r\n    let user = this.props.user.data\r\n    return (\r\n      <div className=\"header-user\">\r\n        <a href={user.html_url} className=\"header-user-name\">\r\n          <img src={user.avatar_url} alt=\"\" className=\"header-user-img\" />\r\n          { user.login }\r\n        </a>\r\n        \r\n        { this.loading() }\r\n        <button className=\"btn\" onClick={getGhCode}>Login</button>\r\n        <button className=\"btn\" onClick={this.props.onLogout}>Logout</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ login, user }) => ({\r\n  login, user\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchToken: () => {\r\n    fetchToken(dispatch)\r\n      // .then(res => {\r\n      //   fetchUser(dispatch)\r\n      //   fetchGists(dispatch)\r\n      // })\r\n  },\r\n  onLogout: () => {\r\n    dispatch(logout())\r\n  },\r\n  onFetchData: () => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n  },\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(User)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetchUser\r\n} from '../actions/user'\r\nimport { setActiveGist } from '../actions/gist'\r\nimport { fetchGists, updateGists } from '../actions/gists';\r\n\r\n\r\nclass Sync extends Component {\r\n\r\n  componentDidMount() {\r\n    // this.props.onFetchData()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gists,\r\n      gist,\r\n      onFetchData,\r\n      onUpdateGists\r\n    } = this.props\r\n    return (\r\n      <div className=\"sync\">\r\n        <button \r\n          className=\"btn\" \r\n          onClick={onFetchData(gists.data.find(activeGist => gist.id === activeGist.id))}\r\n        >pull</button>     \r\n        <button className=\"btn\" onClick={onUpdateGists(gists)}>push</button>\r\n        <div className=\"status\">\r\n          { this.props.gists.patching ? 'pushing to github..' : ''}\r\n          { this.props.gists.pending ? 'getting data from github..' : ''}\r\n        </div>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = ({ gists, gist }) => ({\r\n  gists, gist\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onFetchData: (gist) => e => {\r\n    fetchUser(dispatch)\r\n    fetchGists(dispatch)\r\n    dispatch(setActiveGist(gist))\r\n  },\r\n  onUpdateGists: (gists) => () => {\r\n    // TODO pull (onFetchData) after update\r\n    // or delete all files with null\r\n    // should make promise from updateGists\r\n    dispatch(updateGists(gists))\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Sync)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  newGist\r\n} from '../actions/gist'\r\n\r\nclass AddGist extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"btn\" onClick={this.props.onGistAdd}> new gist +</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onGistAdd: e => dispatch(newGist())\r\n})\r\n\r\nexport default connect(null, mapDispatch)(AddGist)","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n// import Todo from './containers/Todo'\r\nimport Gists from './containers/Gists';\r\nimport Gist from './containers/Gist';\r\nimport User from './containers/User';\r\nimport Sync from './containers/Sync';\r\nimport AddGist from './containers/AddGist'\r\n\r\nclass App extends Component {\r\n\r\n  isAuthenticated = false\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      {/* <Router> */}\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <Sync />\r\n            <AddGist />\r\n            <User />\r\n          </header>\r\n          <aside className=\"side-gists\">\r\n            <Gists />\r\n          </aside>\r\n          <main>\r\n            <Route exact path=\"/\" component={Gist} />\r\n          </main>\r\n          <footer>\r\n            footer\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n// const getNewGistState = (state, action) => cb => {\r\n//   let newState = {...state}\r\n//   let gist = action.payload\r\n//   let index = state.data.findIndex(item => item.id === gist.id)\r\n//   newState.data[index] = cb(gist)\r\n//   return newState\r\n// }\r\n\r\nexport const setActiveGist = (state, action) => ({\r\n  ...state,\r\n  active: action.payload\r\n})\r\nexport const fetchGistFileRequest = (state, action) => {\r\n  let {\r\n    name, id\r\n  } = action.payload\r\n  let newState = {...state}\r\n\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = true\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileSuccess = (state, action) => {\r\n  let {\r\n    id, name, data\r\n  } = action.payload\r\n  let newState = {...state}\r\n  let gistIndex = newState.data.findIndex(gist => gist.id === id)\r\n  let file = newState.data[gistIndex].files[name]\r\n  file.pending = false\r\n  file.content = data\r\n  return newState\r\n}\r\n\r\nexport const fetchGistFileFailure = (state, action) => {\r\n  return state\r\n}\r\n\r\nexport const changeGist = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = true\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistSuccess = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  Object.keys(gist.files).forEach(key => {\r\n    if (gist.files[key] === null)\r\n      delete gist.files[key]\r\n  })\r\n\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const updateGistError = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.changed = false\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const fileAdd = (state, action) => {\r\n  let newState = {...state}\r\n  let gist = action.payload\r\n  gist.files[`new-${Date.now()}`] = {\r\n    filename: 'new',\r\n    content: 'content',\r\n    isNew: true\r\n  }\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const fileRemove = (state, action) => {\r\n  let newState = {...state}\r\n  let { gist, filename } = action.payload\r\n  let file = gist.files[filename]\r\n  if (file.isNew) {\r\n    delete gist.files[filename]\r\n  } else {\r\n    gist.files[filename] = null\r\n  }\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const fileRename = (state, action) => {\r\n  let newState = {...state}\r\n  let { gist, target, filename } = action.payload\r\n  gist.files[target].filename = filename\r\n  let index = state.data.findIndex(item => item.id === gist.id)\r\n  newState.data[index] = gist\r\n  return newState\r\n}\r\n\r\nexport const gistAdd = (state, action ) => {\r\n  let newState = {...state}\r\n  newState.data.push(action.payload)\r\n  return newState\r\n}\r\n\r\nexport const gistDelete = (state, action) => {\r\n  let newState = {...state}\r\n  let id = action.payload\r\n  let index = state.data.findIndex(item => item.id === id)\r\n  newState.data[index].deleted = true\r\n  return newState\r\n}\r\n","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}","import {\r\n  FETCH_GISTS_REQUEST,\r\n  FETCH_GISTS_SUCCESS,\r\n  FETCH_GISTS_FAILURE\r\n} from '../constants/gists'\r\n\r\nimport {\r\n  FETCH_GIST_FILE_REQUEST,\r\n  FETCH_GIST_FILE_SUCCESS,\r\n  FETCH_GIST_FILE_FAILURE\r\n} from '../constants/gist'\r\n\r\nimport {\r\n  GIST_ADD,\r\n  GIST_DELETE,\r\n  CHANGE_GIST,\r\n  UPDATE_GIST_SUCCESS,\r\n  UPDATE_GIST_ERROR,\r\n  UPDATE_GISTS_START,\r\n  UPDATE_GISTS_FINISH\r\n} from '../constant'\r\n\r\nimport {\r\n  fetchGistFileRequest,\r\n  fetchGistFileSuccess,\r\n  fetchGistFileFailure,\r\n  changeGist,\r\n  updateGistSuccess,\r\n  updateGistError,\r\n  gistAdd,\r\n  gistDelete\r\n} from './gist'\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nconst fetchGistsRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGistsSuccess = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  data: action.payload,\r\n  error: defaultState.error\r\n})\r\n\r\nconst fetchGistsFailure = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst updateGistsStart = (state) =>({\r\n  ...state,\r\n  patching: true\r\n})\r\n\r\nconst updateGistsFinish = (state) => ({\r\n  ...state,\r\n  patching: false\r\n})\r\n\r\nexport const gists = createReducer(defaultState, {\r\n  [FETCH_GISTS_REQUEST]: fetchGistsRequest,\r\n  [FETCH_GISTS_SUCCESS]: fetchGistsSuccess,\r\n  [FETCH_GISTS_FAILURE]: fetchGistsFailure,\r\n  [FETCH_GIST_FILE_REQUEST]: fetchGistFileRequest,\r\n  [FETCH_GIST_FILE_SUCCESS]: fetchGistFileSuccess,\r\n  [FETCH_GIST_FILE_FAILURE]: fetchGistFileFailure,\r\n  [CHANGE_GIST]: changeGist,\r\n  [UPDATE_GISTS_START]: updateGistsStart,\r\n  [UPDATE_GISTS_FINISH]: updateGistsFinish,\r\n  [UPDATE_GIST_SUCCESS]: updateGistSuccess,\r\n  [UPDATE_GIST_ERROR]: updateGistError,\r\n  [GIST_ADD]: gistAdd,\r\n  [GIST_DELETE]: gistDelete\r\n})\r\n\r\n","import {\r\n  SET_ACTIVE_GIST,\r\n  FILE_ADD,\r\n  FILE_REMOVE,\r\n  FILE_RENAME,\r\n  FILE_CONTENT_CHANGE,\r\n  NEW_GIST,\r\n  GIST_RENAME\r\n} from '../constant'\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {}\r\n\r\nconst setActiveGist = (state, action) => action.payload\r\n\r\nconst newGist = () => {\r\n  return {\r\n    description: 'new gist',\r\n    public: false,\r\n    added: true,\r\n    files: {}\r\n  }\r\n}\r\n\r\nexport const fileAdd = (state) => {\r\n  let gist = {...state}\r\n  gist.files = {...gist.files} || {}\r\n  gist.files[`new-${Date.now()}`] = {\r\n    filename: 'new',\r\n    content: 'new',\r\n    isNew: true\r\n  }\r\n  return gist\r\n}\r\n\r\nexport const fileRemove = (state, action) => {\r\n  let gist = {...state}\r\n  let filename = action.payload\r\n  let file = gist.files[filename]\r\n  if (file.isNew) {\r\n    delete gist.files[filename]\r\n  } else {\r\n    gist.files[filename] = null\r\n  }\r\n  return gist\r\n}\r\n\r\nexport const fileRename = (state, action) => {\r\n  let gist = {...state}\r\n  let { target, filename } = action.payload\r\n  gist.files[target].filename = filename\r\n  return gist\r\n}\r\n\r\nexport const fileContentChange = (state, action) => {\r\n  let gist = {...state}\r\n  let {filename, content} = action.payload\r\n  gist.files[filename].content = content\r\n  return gist\r\n}\r\n\r\nexport const gistRename = (state, action) => {\r\n  let gist = {...state}\r\n  let name = action.payload\r\n  gist.description = name\r\n  return gist\r\n}\r\n\r\nexport const gist = createReducer(defaultState, {\r\n  [SET_ACTIVE_GIST]: setActiveGist,\r\n  [FILE_ADD]: fileAdd,\r\n  [FILE_REMOVE]: fileRemove,\r\n  [FILE_RENAME]: fileRename,\r\n  [FILE_CONTENT_CHANGE]: fileContentChange,\r\n  [NEW_GIST]: newGist,\r\n  [GIST_RENAME]: gistRename\r\n})","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE\r\n} from '../constants/user'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  data: {},\r\n  error: ''\r\n}\r\n\r\nexport const user = (state=defaultState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.payload,\r\n        error: defaultState.error\r\n      }\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: defaultState.data,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  FETCH_GH_TOKEN_REQUEST,\r\n  FETCH_GH_TOKEN_SUCCESS,\r\n  FETCH_GH_TOKEN_ERROR,\r\n  LOGOUT\r\n} from '../constant'\r\n\r\n\r\nimport { createReducer } from '../helpers/createReducers'\r\n\r\nconst defaultState = {\r\n  pending: false,\r\n  token: '',\r\n  error: {},\r\n  isAuth: false\r\n}\r\n\r\nconst fetchGhTokenRequest = (state) => ({\r\n  ...state,\r\n  pending: true\r\n})\r\n\r\nconst fetchGhTokenSuccess = (state, action) => ({\r\n  pending: false,\r\n  token: action.payload,\r\n  error: defaultState.error,\r\n  isAuth: true\r\n})\r\n\r\nconst fetchGhTokenError = (state, action) => ({\r\n  ...state,\r\n  pending: false,\r\n  error: action.payload\r\n})\r\n\r\nconst logout = (state) => ({\r\n  ...state,\r\n  token: defaultState.token,\r\n  isAuth: false\r\n})\r\n\r\nexport const login = createReducer(defaultState, {\r\n  [FETCH_GH_TOKEN_REQUEST]: fetchGhTokenRequest,\r\n  [FETCH_GH_TOKEN_SUCCESS]: fetchGhTokenSuccess,\r\n  [FETCH_GH_TOKEN_ERROR]: fetchGhTokenError,\r\n  [LOGOUT]: logout\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { gists } from './gists'\r\nimport { gist } from './activeGist'\r\nimport { user } from './user'\r\nimport { login } from './login'\r\n\r\nconst rootReducer = combineReducers({\r\n  gists,\r\n  gist,\r\n  user,\r\n  login,\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'localforage'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(persistedReducer, composeEnhancers(\r\n  applyMiddleware(\r\n    thunk\r\n  )\r\n))\r\nexport const persistor = persistStore(store)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n// import promiseMiddleware from 'redux-promise'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport App from './App';\r\nimport './assets/styles/style.scss'\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { store, persistor } from './configureStore'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}